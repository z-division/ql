
state 0
	$accept: .start $end 
	declaration_list: .    (2)
	scope_def: .    (22)

	$end  reduce 2 (src line 113)
	NEWLINE  shift 5
	LET  shift 13
	RETURN  shift 15
	TYPE  shift 6
	NOT  shift 18
	SUB  shift 17
	IDENT  shift 14
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	NOOP  shift 8
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	expr  goto 9
	unit_expr  goto 16
	composable_expr  goto 12
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23
	control_flow_expr  goto 7
	assignment_expr  goto 10
	return_expr  goto 11
	declaration  goto 4
	declaration_list  goto 2
	nonempty_declaration_list  goto 3
	start  goto 1

state 1
	$accept:  start.$end 

	$end  accept
	.  error


state 2
	start:  declaration_list.    (1)

	.  reduce 1 (src line 103)


state 3
	declaration_list:  nonempty_declaration_list.    (3)
	nonempty_declaration_list:  nonempty_declaration_list.declaration 
	scope_def: .    (22)

	$end  reduce 3 (src line 117)
	NEWLINE  shift 5
	LET  shift 13
	RETURN  shift 15
	TYPE  shift 6
	NOT  shift 18
	SUB  shift 17
	IDENT  shift 14
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	NOOP  shift 8
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	expr  goto 9
	unit_expr  goto 16
	composable_expr  goto 12
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23
	control_flow_expr  goto 7
	assignment_expr  goto 10
	return_expr  goto 11
	declaration  goto 34

state 4
	nonempty_declaration_list:  declaration.    (4)

	.  reduce 4 (src line 121)


state 5
	declaration:  NEWLINE.    (6)

	.  reduce 6 (src line 134)


state 6
	declaration:  TYPE.IDENT type_spec 
	declaration:  TYPE.IDENT NEWLINE type_spec 

	IDENT  shift 35
	.  error


state 7
	declaration:  control_flow_expr.terminator 

	SEMICOLON  shift 37
	NEWLINE  shift 38
	.  error

	terminator  goto 36

state 8
	control_flow_expr:  NOOP.    (18)

	.  reduce 18 (src line 204)


state 9
	control_flow_expr:  expr.    (19)

	.  reduce 19 (src line 211)


state 10
	control_flow_expr:  assignment_expr.    (20)

	.  reduce 20 (src line 217)


state 11
	control_flow_expr:  return_expr.    (21)

	.  reduce 21 (src line 220)


state 12
	expr:  composable_expr.    (50)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 39
	AND  shift 40
	LT  shift 41
	GT  shift 42
	EQ  shift 43
	NE  shift 44
	LE  shift 45
	GE  shift 46
	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 50 (src line 455)


state 13
	assignment_expr:  LET.IDENT ASSIGN expr 
	assignment_expr:  LET.IDENT type_spec ASSIGN expr 
	assignment_expr:  LET.IDENT NEWLINE type_spec ASSIGN expr 

	IDENT  shift 57
	.  error


state 14
	scope_def:  IDENT.AT 
	assignment_expr:  IDENT.ASSIGN expr 
	unit_expr:  IDENT.    (60)

	ASSIGN  shift 59
	AT  shift 58
	.  reduce 60 (src line 495)


state 15
	return_expr:  RETURN.expr 
	return_expr:  RETURN.AT IDENT expr 
	scope_def: .    (22)

	AT  shift 61
	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	expr  goto 60
	unit_expr  goto 16
	composable_expr  goto 12
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 16
	unit_expr:  unit_expr.DOT IDENT 
	unit_expr:  unit_expr.L_PAREN argument_list R_PAREN 
	composable_expr:  unit_expr.    (72)

	L_PAREN  shift 64
	DOT  shift 63
	.  reduce 72 (src line 575)


state 17
	composable_expr:  SUB.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 65
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 18
	composable_expr:  NOT.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 66
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 19
	unit_expr:  literal.    (61)

	.  reduce 61 (src line 502)


state 20
	unit_expr:  conversion_type.L_PAREN composable_expr R_PAREN 

	L_PAREN  shift 67
	.  error


state 21
	unit_expr:  expr_block.    (63)

	.  reduce 63 (src line 517)


state 22
	unit_expr:  conditional_expr.    (64)

	.  reduce 64 (src line 520)


state 23
	unit_expr:  for_expr.    (65)

	.  reduce 65 (src line 523)


state 24
	literal:  BYTE_LITERAL.    (51)

	.  reduce 51 (src line 461)


state 25
	literal:  STRING_LITERAL.    (52)

	.  reduce 52 (src line 465)


state 26
	literal:  INT_LITERAL.    (53)

	.  reduce 53 (src line 468)


state 27
	literal:  FLOAT_LITERAL.    (54)

	.  reduce 54 (src line 471)


state 28
	literal:  BOOL_LITERAL.    (55)

	.  reduce 55 (src line 474)


state 29
	conversion_type:  BYTE_TYPE.    (56)

	.  reduce 56 (src line 479)


state 30
	conversion_type:  INT_TYPE.    (57)

	.  reduce 57 (src line 483)


state 31
	conversion_type:  UINT_TYPE.    (58)

	.  reduce 58 (src line 486)


state 32
	conversion_type:  FLOAT_TYPE.    (59)

	.  reduce 59 (src line 489)


state 33
	expr_block:  scope_def.base_expr_block 
	conditional_expr:  scope_def.base_conditional_expr 
	for_expr:  scope_def.base_for_expr 

	L_BRACE  shift 71
	IF  shift 72
	FOR  shift 73
	.  error

	base_expr_block  goto 68
	base_conditional_expr  goto 69
	base_for_expr  goto 70

state 34
	nonempty_declaration_list:  nonempty_declaration_list declaration.    (5)

	.  reduce 5 (src line 127)


state 35
	declaration:  TYPE IDENT.type_spec 
	declaration:  TYPE IDENT.NEWLINE type_spec 

	NEWLINE  shift 75
	IDENT  shift 77
	BOOL_TYPE  shift 78
	INT_TYPE  shift 79
	UINT_TYPE  shift 80
	FLOAT_TYPE  shift 81
	BYTE_TYPE  shift 82
	STRING_TYPE  shift 83
	.  error

	scalar_type  goto 76
	type_spec  goto 74

state 36
	declaration:  control_flow_expr terminator.    (9)

	.  reduce 9 (src line 155)


state 37
	terminator:  SEMICOLON.    (14)

	.  reduce 14 (src line 186)


state 38
	terminator:  NEWLINE.    (15)

	.  reduce 15 (src line 190)


state 39
	composable_expr:  composable_expr OR.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 84
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 40
	composable_expr:  composable_expr AND.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 85
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 41
	composable_expr:  composable_expr LT.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 86
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 42
	composable_expr:  composable_expr GT.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 87
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 43
	composable_expr:  composable_expr EQ.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 88
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 44
	composable_expr:  composable_expr NE.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 89
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 45
	composable_expr:  composable_expr LE.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 90
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 46
	composable_expr:  composable_expr GE.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 91
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 47
	composable_expr:  composable_expr BITWISE_OR.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 92
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 48
	composable_expr:  composable_expr BITWISE_AND.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 93
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 49
	composable_expr:  composable_expr XOR.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 94
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 50
	composable_expr:  composable_expr L_SHIFT.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 95
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 51
	composable_expr:  composable_expr R_SHIFT.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 96
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 52
	composable_expr:  composable_expr ADD.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 97
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 53
	composable_expr:  composable_expr SUB.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 98
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 54
	composable_expr:  composable_expr MUL.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 99
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 55
	composable_expr:  composable_expr DIV.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 100
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 56
	composable_expr:  composable_expr MOD.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 101
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 57
	assignment_expr:  LET IDENT.ASSIGN expr 
	assignment_expr:  LET IDENT.type_spec ASSIGN expr 
	assignment_expr:  LET IDENT.NEWLINE type_spec ASSIGN expr 

	ASSIGN  shift 102
	NEWLINE  shift 104
	IDENT  shift 77
	BOOL_TYPE  shift 78
	INT_TYPE  shift 79
	UINT_TYPE  shift 80
	FLOAT_TYPE  shift 81
	BYTE_TYPE  shift 82
	STRING_TYPE  shift 83
	.  error

	scalar_type  goto 76
	type_spec  goto 103

state 58
	scope_def:  IDENT AT.    (23)

	.  reduce 23 (src line 229)


state 59
	assignment_expr:  IDENT ASSIGN.expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	expr  goto 105
	unit_expr  goto 16
	composable_expr  goto 12
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 60
	return_expr:  RETURN expr.    (48)

	.  reduce 48 (src line 436)


state 61
	return_expr:  RETURN AT.IDENT expr 

	IDENT  shift 106
	.  error


state 62
	scope_def:  IDENT.AT 
	unit_expr:  IDENT.    (60)

	AT  shift 58
	.  reduce 60 (src line 495)


state 63
	unit_expr:  unit_expr DOT.IDENT 

	IDENT  shift 107
	.  error


state 64
	unit_expr:  unit_expr L_PAREN.argument_list R_PAREN 
	argument_list: .    (68)
	scope_def: .    (22)

	R_PAREN  reduce 68 (src line 545)
	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 110
	argument_list  goto 108
	nonempty_argument_list  goto 109
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 65
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  SUB composable_expr.    (91)

	.  reduce 91 (src line 723)


state 66
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  NOT composable_expr.    (92)

	LT  shift 41
	GT  shift 42
	EQ  shift 43
	NE  shift 44
	LE  shift 45
	GE  shift 46
	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 92 (src line 730)


state 67
	unit_expr:  conversion_type L_PAREN.composable_expr R_PAREN 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 111
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 68
	expr_block:  scope_def base_expr_block.    (32)

	.  reduce 32 (src line 274)


state 69
	conditional_expr:  scope_def base_conditional_expr.    (34)

	.  reduce 34 (src line 295)


state 70
	for_expr:  scope_def base_for_expr.    (41)

	.  reduce 41 (src line 364)


state 71
	base_expr_block:  L_BRACE.statement_list R_BRACE 
	statement_list: .    (10)
	scope_def: .    (22)

	R_BRACE  reduce 10 (src line 164)
	SEMICOLON  shift 37
	NEWLINE  shift 38
	LET  shift 13
	RETURN  shift 15
	NOT  shift 18
	SUB  shift 17
	IDENT  shift 14
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	NOOP  shift 8
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	expr  goto 9
	unit_expr  goto 16
	composable_expr  goto 12
	statement_list  goto 112
	nonempty_statement_list  goto 113
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23
	statement  goto 114
	control_flow_expr  goto 116
	assignment_expr  goto 10
	return_expr  goto 11
	terminator  goto 115

state 72
	base_conditional_expr:  IF.composable_expr base_expr_block 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block 
	base_conditional_expr:  IF.composable_expr base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF.composable_expr base_expr_block ELSE base_expr_block 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block ELSE base_expr_block 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 117
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 73
	base_for_expr:  FOR.composable_expr expr_block 
	base_for_expr:  FOR.composable_expr NEWLINE expr_block 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 118
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 74
	declaration:  TYPE IDENT type_spec.    (7)

	.  reduce 7 (src line 139)


state 75
	declaration:  TYPE IDENT NEWLINE.type_spec 

	IDENT  shift 77
	BOOL_TYPE  shift 78
	INT_TYPE  shift 79
	UINT_TYPE  shift 80
	FLOAT_TYPE  shift 81
	BYTE_TYPE  shift 82
	STRING_TYPE  shift 83
	.  error

	scalar_type  goto 76
	type_spec  goto 119

state 76
	type_spec:  scalar_type.    (30)

	.  reduce 30 (src line 259)


state 77
	type_spec:  IDENT.    (31)

	.  reduce 31 (src line 266)


state 78
	scalar_type:  BOOL_TYPE.    (24)

	.  reduce 24 (src line 238)


state 79
	scalar_type:  INT_TYPE.    (25)

	.  reduce 25 (src line 242)


state 80
	scalar_type:  UINT_TYPE.    (26)

	.  reduce 26 (src line 245)


state 81
	scalar_type:  FLOAT_TYPE.    (27)

	.  reduce 27 (src line 248)


state 82
	scalar_type:  BYTE_TYPE.    (28)

	.  reduce 28 (src line 251)


state 83
	scalar_type:  STRING_TYPE.    (29)

	.  reduce 29 (src line 254)


state 84
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr OR composable_expr.    (73)
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	AND  shift 40
	LT  shift 41
	GT  shift 42
	EQ  shift 43
	NE  shift 44
	LE  shift 45
	GE  shift 46
	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 73 (src line 579)


state 85
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr AND composable_expr.    (74)
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	LT  shift 41
	GT  shift 42
	EQ  shift 43
	NE  shift 44
	LE  shift 45
	GE  shift 46
	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 74 (src line 587)


state 86
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr LT composable_expr.    (75)
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 75 (src line 595)


state 87
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr GT composable_expr.    (76)
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 76 (src line 603)


state 88
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr EQ composable_expr.    (77)
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 77 (src line 611)


state 89
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr NE composable_expr.    (78)
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 78 (src line 619)


state 90
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr LE composable_expr.    (79)
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 79 (src line 627)


state 91
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr GE composable_expr.    (80)
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 80 (src line 635)


state 92
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr BITWISE_OR composable_expr.    (81)
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 81 (src line 643)


state 93
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr BITWISE_AND composable_expr.    (82)
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 82 (src line 651)


state 94
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr XOR composable_expr.    (83)
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 83 (src line 659)


state 95
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr L_SHIFT composable_expr.    (84)
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 84 (src line 667)


state 96
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr R_SHIFT composable_expr.    (85)
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 85 (src line 675)


state 97
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr ADD composable_expr.    (86)
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 86 (src line 683)


state 98
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr SUB composable_expr.    (87)
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 87 (src line 691)


state 99
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr MUL composable_expr.    (88)
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	.  reduce 88 (src line 699)


state 100
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr DIV composable_expr.    (89)
	composable_expr:  composable_expr.MOD composable_expr 

	.  reduce 89 (src line 707)


state 101
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  composable_expr MOD composable_expr.    (90)

	.  reduce 90 (src line 715)


state 102
	assignment_expr:  LET IDENT ASSIGN.expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	expr  goto 120
	unit_expr  goto 16
	composable_expr  goto 12
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 103
	assignment_expr:  LET IDENT type_spec.ASSIGN expr 

	ASSIGN  shift 121
	.  error


state 104
	assignment_expr:  LET IDENT NEWLINE.type_spec ASSIGN expr 

	IDENT  shift 77
	BOOL_TYPE  shift 78
	INT_TYPE  shift 79
	UINT_TYPE  shift 80
	FLOAT_TYPE  shift 81
	BYTE_TYPE  shift 82
	STRING_TYPE  shift 83
	.  error

	scalar_type  goto 76
	type_spec  goto 122

state 105
	assignment_expr:  IDENT ASSIGN expr.    (47)

	.  reduce 47 (src line 425)


state 106
	return_expr:  RETURN AT IDENT.expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	expr  goto 123
	unit_expr  goto 16
	composable_expr  goto 12
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 107
	unit_expr:  unit_expr DOT IDENT.    (66)

	.  reduce 66 (src line 526)


state 108
	unit_expr:  unit_expr L_PAREN argument_list.R_PAREN 

	R_PAREN  shift 124
	.  error


state 109
	argument_list:  nonempty_argument_list.    (69)
	nonempty_argument_list:  nonempty_argument_list.COMMA composable_expr 

	COMMA  shift 125
	.  reduce 69 (src line 549)


state 110
	nonempty_argument_list:  composable_expr.    (70)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 39
	AND  shift 40
	LT  shift 41
	GT  shift 42
	EQ  shift 43
	NE  shift 44
	LE  shift 45
	GE  shift 46
	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 70 (src line 554)


state 111
	unit_expr:  conversion_type L_PAREN composable_expr.R_PAREN 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	R_PAREN  shift 126
	OR  shift 39
	AND  shift 40
	LT  shift 41
	GT  shift 42
	EQ  shift 43
	NE  shift 44
	LE  shift 45
	GE  shift 46
	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  error


state 112
	base_expr_block:  L_BRACE statement_list.R_BRACE 

	R_BRACE  shift 127
	.  error


state 113
	statement_list:  nonempty_statement_list.    (11)
	nonempty_statement_list:  nonempty_statement_list.statement 
	scope_def: .    (22)

	R_BRACE  reduce 11 (src line 168)
	SEMICOLON  shift 37
	NEWLINE  shift 38
	LET  shift 13
	RETURN  shift 15
	NOT  shift 18
	SUB  shift 17
	IDENT  shift 14
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	NOOP  shift 8
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	expr  goto 9
	unit_expr  goto 16
	composable_expr  goto 12
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23
	statement  goto 128
	control_flow_expr  goto 116
	assignment_expr  goto 10
	return_expr  goto 11
	terminator  goto 115

state 114
	nonempty_statement_list:  statement.    (12)

	.  reduce 12 (src line 173)


state 115
	statement:  terminator.    (16)

	.  reduce 16 (src line 195)


state 116
	statement:  control_flow_expr.terminator 

	SEMICOLON  shift 37
	NEWLINE  shift 38
	.  error

	terminator  goto 129

state 117
	base_conditional_expr:  IF composable_expr.base_expr_block 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block 
	base_conditional_expr:  IF composable_expr.base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr.base_expr_block ELSE base_expr_block 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block ELSE base_expr_block 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	L_BRACE  shift 71
	NEWLINE  shift 131
	OR  shift 39
	AND  shift 40
	LT  shift 41
	GT  shift 42
	EQ  shift 43
	NE  shift 44
	LE  shift 45
	GE  shift 46
	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  error

	base_expr_block  goto 130

state 118
	base_for_expr:  FOR composable_expr.expr_block 
	base_for_expr:  FOR composable_expr.NEWLINE expr_block 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	scope_def: .    (22)

	NEWLINE  shift 133
	OR  shift 39
	AND  shift 40
	LT  shift 41
	GT  shift 42
	EQ  shift 43
	NE  shift 44
	LE  shift 45
	GE  shift 46
	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	IDENT  shift 135
	.  reduce 22 (src line 225)

	scope_def  goto 134
	expr_block  goto 132

state 119
	declaration:  TYPE IDENT NEWLINE type_spec.    (8)

	.  reduce 8 (src line 147)


state 120
	assignment_expr:  LET IDENT ASSIGN expr.    (44)

	.  reduce 44 (src line 393)


state 121
	assignment_expr:  LET IDENT type_spec ASSIGN.expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	expr  goto 136
	unit_expr  goto 16
	composable_expr  goto 12
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 122
	assignment_expr:  LET IDENT NEWLINE type_spec.ASSIGN expr 

	ASSIGN  shift 137
	.  error


state 123
	return_expr:  RETURN AT IDENT expr.    (49)

	.  reduce 49 (src line 444)


state 124
	unit_expr:  unit_expr L_PAREN argument_list R_PAREN.    (67)

	.  reduce 67 (src line 534)


state 125
	nonempty_argument_list:  nonempty_argument_list COMMA.composable_expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	unit_expr  goto 16
	composable_expr  goto 138
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 126
	unit_expr:  conversion_type L_PAREN composable_expr R_PAREN.    (62)

	.  reduce 62 (src line 508)


state 127
	base_expr_block:  L_BRACE statement_list R_BRACE.    (33)

	.  reduce 33 (src line 284)


state 128
	nonempty_statement_list:  nonempty_statement_list statement.    (13)

	.  reduce 13 (src line 179)


state 129
	statement:  control_flow_expr terminator.    (17)

	.  reduce 17 (src line 199)


state 130
	base_conditional_expr:  IF composable_expr base_expr_block.    (35)
	base_conditional_expr:  IF composable_expr base_expr_block.ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr base_expr_block.ELSE base_expr_block 

	ELSE  shift 139
	.  reduce 35 (src line 305)


state 131
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block 
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block ELSE base_expr_block 

	L_BRACE  shift 71
	.  error

	base_expr_block  goto 140

state 132
	base_for_expr:  FOR composable_expr expr_block.    (42)

	.  reduce 42 (src line 374)


state 133
	base_for_expr:  FOR composable_expr NEWLINE.expr_block 
	scope_def: .    (22)

	IDENT  shift 135
	.  reduce 22 (src line 225)

	scope_def  goto 134
	expr_block  goto 141

state 134
	expr_block:  scope_def.base_expr_block 

	L_BRACE  shift 71
	.  error

	base_expr_block  goto 68

state 135
	scope_def:  IDENT.AT 

	AT  shift 58
	.  error


state 136
	assignment_expr:  LET IDENT type_spec ASSIGN expr.    (45)

	.  reduce 45 (src line 403)


state 137
	assignment_expr:  LET IDENT NEWLINE type_spec ASSIGN.expr 
	scope_def: .    (22)

	NOT  shift 18
	SUB  shift 17
	IDENT  shift 62
	BYTE_LITERAL  shift 24
	STRING_LITERAL  shift 25
	INT_LITERAL  shift 26
	FLOAT_LITERAL  shift 27
	BOOL_LITERAL  shift 28
	INT_TYPE  shift 30
	UINT_TYPE  shift 31
	FLOAT_TYPE  shift 32
	BYTE_TYPE  shift 29
	.  reduce 22 (src line 225)

	literal  goto 19
	conversion_type  goto 20
	expr  goto 142
	unit_expr  goto 16
	composable_expr  goto 12
	scope_def  goto 33
	expr_block  goto 21
	conditional_expr  goto 22
	for_expr  goto 23

state 138
	nonempty_argument_list:  nonempty_argument_list COMMA composable_expr.    (71)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 39
	AND  shift 40
	LT  shift 41
	GT  shift 42
	EQ  shift 43
	NE  shift 44
	LE  shift 45
	GE  shift 46
	BITWISE_OR  shift 47
	BITWISE_AND  shift 48
	XOR  shift 49
	L_SHIFT  shift 50
	R_SHIFT  shift 51
	ADD  shift 52
	SUB  shift 53
	MUL  shift 54
	DIV  shift 55
	MOD  shift 56
	.  reduce 71 (src line 563)


state 139
	base_conditional_expr:  IF composable_expr base_expr_block ELSE.base_conditional_expr 
	base_conditional_expr:  IF composable_expr base_expr_block ELSE.base_expr_block 

	L_BRACE  shift 71
	IF  shift 72
	.  error

	base_expr_block  goto 144
	base_conditional_expr  goto 143

state 140
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.    (36)
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.ELSE base_expr_block 

	ELSE  shift 145
	.  reduce 36 (src line 314)


state 141
	base_for_expr:  FOR composable_expr NEWLINE expr_block.    (43)

	.  reduce 43 (src line 383)


state 142
	assignment_expr:  LET IDENT NEWLINE type_spec ASSIGN expr.    (46)

	.  reduce 46 (src line 414)


state 143
	base_conditional_expr:  IF composable_expr base_expr_block ELSE base_conditional_expr.    (37)

	.  reduce 37 (src line 322)


state 144
	base_conditional_expr:  IF composable_expr base_expr_block ELSE base_expr_block.    (39)

	.  reduce 39 (src line 342)


state 145
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE.base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE.base_expr_block 

	L_BRACE  shift 71
	IF  shift 72
	.  error

	base_expr_block  goto 147
	base_conditional_expr  goto 146

state 146
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE base_conditional_expr.    (38)

	.  reduce 38 (src line 332)


state 147
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE base_expr_block.    (40)

	.  reduce 40 (src line 352)


59 terminals, 28 nonterminals
93 grammar rules, 148/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
77 working sets used
memory: parser 591/120000
86 extra closures
766 shift entries, 6 exceptions
77 goto entries
262 entries saved by goto default
Optimizer space used: output 379/120000
379 table entries, 41 zero
maximum spread: 59, maximum offset: 145
