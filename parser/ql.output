
state 0
	$accept: .start $end 
	declaration_list: .    (2)
	scope_def: .    (28)

	$end  reduce 2 (src line 115)
	NEWLINE  shift 5
	LET  shift 14
	RETURN  shift 16
	TYPE  shift 6
	FUNC  shift 7
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 15
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	NOOP  shift 9
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 10
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24
	control_flow_expr  goto 8
	assignment_expr  goto 11
	return_expr  goto 12
	declaration  goto 4
	declaration_list  goto 2
	nonempty_declaration_list  goto 3
	start  goto 1

state 1
	$accept:  start.$end 

	$end  accept
	.  error


state 2
	start:  declaration_list.    (1)

	.  reduce 1 (src line 105)


state 3
	declaration_list:  nonempty_declaration_list.    (3)
	nonempty_declaration_list:  nonempty_declaration_list.declaration 
	scope_def: .    (28)

	$end  reduce 3 (src line 119)
	NEWLINE  shift 5
	LET  shift 14
	RETURN  shift 16
	TYPE  shift 6
	FUNC  shift 7
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 15
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	NOOP  shift 9
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 10
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24
	control_flow_expr  goto 8
	assignment_expr  goto 11
	return_expr  goto 12
	declaration  goto 35

state 4
	nonempty_declaration_list:  declaration.    (4)

	.  reduce 4 (src line 123)


state 5
	declaration:  NEWLINE.    (6)

	.  reduce 6 (src line 136)


state 6
	declaration:  TYPE.IDENT type_spec 
	declaration:  TYPE.IDENT NEWLINE type_spec 

	IDENT  shift 36
	.  error


state 7
	declaration:  FUNC.IDENT L_PAREN parameter_list R_PAREN base_expr_block 
	declaration:  FUNC.IDENT L_PAREN parameter_list R_PAREN type_spec base_expr_block 

	IDENT  shift 37
	.  error


state 8
	declaration:  control_flow_expr.terminator 

	SEMICOLON  shift 39
	NEWLINE  shift 40
	.  error

	terminator  goto 38

state 9
	control_flow_expr:  NOOP.    (24)

	.  reduce 24 (src line 260)


state 10
	control_flow_expr:  expr.    (25)

	.  reduce 25 (src line 267)


state 11
	control_flow_expr:  assignment_expr.    (26)

	.  reduce 26 (src line 273)


state 12
	control_flow_expr:  return_expr.    (27)

	.  reduce 27 (src line 276)


state 13
	expr:  composable_expr.    (56)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 41
	AND  shift 42
	LT  shift 43
	GT  shift 44
	EQ  shift 45
	NE  shift 46
	LE  shift 47
	GE  shift 48
	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 56 (src line 511)


state 14
	assignment_expr:  LET.IDENT ASSIGN expr 
	assignment_expr:  LET.IDENT type_spec ASSIGN expr 
	assignment_expr:  LET.IDENT NEWLINE type_spec ASSIGN expr 

	IDENT  shift 59
	.  error


state 15
	scope_def:  IDENT.AT 
	assignment_expr:  IDENT.ASSIGN expr 
	unit_expr:  IDENT.    (66)

	ASSIGN  shift 61
	AT  shift 60
	.  reduce 66 (src line 551)


state 16
	return_expr:  RETURN.expr 
	return_expr:  RETURN.AT IDENT expr 
	scope_def: .    (28)

	AT  shift 63
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 62
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 17
	unit_expr:  unit_expr.DOT IDENT 
	unit_expr:  unit_expr.L_PAREN argument_list R_PAREN 
	composable_expr:  unit_expr.    (78)

	L_PAREN  shift 66
	DOT  shift 65
	.  reduce 78 (src line 631)


state 18
	composable_expr:  SUB.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 67
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 19
	composable_expr:  NOT.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 68
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 20
	unit_expr:  literal.    (67)

	.  reduce 67 (src line 558)


state 21
	unit_expr:  conversion_type.L_PAREN composable_expr R_PAREN 

	L_PAREN  shift 69
	.  error


state 22
	unit_expr:  expr_block.    (69)

	.  reduce 69 (src line 573)


state 23
	unit_expr:  conditional_expr.    (70)

	.  reduce 70 (src line 576)


state 24
	unit_expr:  for_expr.    (71)

	.  reduce 71 (src line 579)


state 25
	literal:  BYTE_LITERAL.    (57)

	.  reduce 57 (src line 517)


state 26
	literal:  STRING_LITERAL.    (58)

	.  reduce 58 (src line 521)


state 27
	literal:  INT_LITERAL.    (59)

	.  reduce 59 (src line 524)


state 28
	literal:  FLOAT_LITERAL.    (60)

	.  reduce 60 (src line 527)


state 29
	literal:  BOOL_LITERAL.    (61)

	.  reduce 61 (src line 530)


state 30
	conversion_type:  BYTE_TYPE.    (62)

	.  reduce 62 (src line 535)


state 31
	conversion_type:  INT_TYPE.    (63)

	.  reduce 63 (src line 539)


state 32
	conversion_type:  UINT_TYPE.    (64)

	.  reduce 64 (src line 542)


state 33
	conversion_type:  FLOAT_TYPE.    (65)

	.  reduce 65 (src line 545)


state 34
	expr_block:  scope_def.base_expr_block 
	conditional_expr:  scope_def.base_conditional_expr 
	for_expr:  scope_def.base_for_expr 

	L_BRACE  shift 73
	IF  shift 74
	FOR  shift 75
	.  error

	base_expr_block  goto 70
	base_conditional_expr  goto 71
	base_for_expr  goto 72

state 35
	nonempty_declaration_list:  nonempty_declaration_list declaration.    (5)

	.  reduce 5 (src line 129)


state 36
	declaration:  TYPE IDENT.type_spec 
	declaration:  TYPE IDENT.NEWLINE type_spec 

	NEWLINE  shift 77
	IDENT  shift 79
	BOOL_TYPE  shift 80
	INT_TYPE  shift 81
	UINT_TYPE  shift 82
	FLOAT_TYPE  shift 83
	BYTE_TYPE  shift 84
	STRING_TYPE  shift 85
	.  error

	scalar_type  goto 78
	type_spec  goto 76

state 37
	declaration:  FUNC IDENT.L_PAREN parameter_list R_PAREN base_expr_block 
	declaration:  FUNC IDENT.L_PAREN parameter_list R_PAREN type_spec base_expr_block 

	L_PAREN  shift 86
	.  error


state 38
	declaration:  control_flow_expr terminator.    (11)

	.  reduce 11 (src line 180)


state 39
	terminator:  SEMICOLON.    (20)

	.  reduce 20 (src line 242)


state 40
	terminator:  NEWLINE.    (21)

	.  reduce 21 (src line 246)


state 41
	composable_expr:  composable_expr OR.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 87
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 42
	composable_expr:  composable_expr AND.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 88
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 43
	composable_expr:  composable_expr LT.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 89
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 44
	composable_expr:  composable_expr GT.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 90
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 45
	composable_expr:  composable_expr EQ.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 91
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 46
	composable_expr:  composable_expr NE.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 92
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 47
	composable_expr:  composable_expr LE.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 93
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 48
	composable_expr:  composable_expr GE.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 94
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 49
	composable_expr:  composable_expr BITWISE_OR.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 95
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 50
	composable_expr:  composable_expr BITWISE_AND.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 96
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 51
	composable_expr:  composable_expr XOR.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 97
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 52
	composable_expr:  composable_expr L_SHIFT.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 98
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 53
	composable_expr:  composable_expr R_SHIFT.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 99
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 54
	composable_expr:  composable_expr ADD.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 100
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 55
	composable_expr:  composable_expr SUB.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 101
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 56
	composable_expr:  composable_expr MUL.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 102
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 57
	composable_expr:  composable_expr DIV.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 103
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 58
	composable_expr:  composable_expr MOD.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 104
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 59
	assignment_expr:  LET IDENT.ASSIGN expr 
	assignment_expr:  LET IDENT.type_spec ASSIGN expr 
	assignment_expr:  LET IDENT.NEWLINE type_spec ASSIGN expr 

	ASSIGN  shift 105
	NEWLINE  shift 107
	IDENT  shift 79
	BOOL_TYPE  shift 80
	INT_TYPE  shift 81
	UINT_TYPE  shift 82
	FLOAT_TYPE  shift 83
	BYTE_TYPE  shift 84
	STRING_TYPE  shift 85
	.  error

	scalar_type  goto 78
	type_spec  goto 106

state 60
	scope_def:  IDENT AT.    (29)

	.  reduce 29 (src line 285)


state 61
	assignment_expr:  IDENT ASSIGN.expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 108
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 62
	return_expr:  RETURN expr.    (54)

	.  reduce 54 (src line 492)


state 63
	return_expr:  RETURN AT.IDENT expr 

	IDENT  shift 109
	.  error


state 64
	scope_def:  IDENT.AT 
	unit_expr:  IDENT.    (66)

	AT  shift 60
	.  reduce 66 (src line 551)


state 65
	unit_expr:  unit_expr DOT.IDENT 

	IDENT  shift 110
	.  error


state 66
	unit_expr:  unit_expr L_PAREN.argument_list R_PAREN 
	argument_list: .    (74)
	scope_def: .    (28)

	R_PAREN  reduce 74 (src line 601)
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 113
	argument_list  goto 111
	nonempty_argument_list  goto 112
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 67
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  SUB composable_expr.    (97)

	.  reduce 97 (src line 779)


state 68
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  NOT composable_expr.    (98)

	LT  shift 43
	GT  shift 44
	EQ  shift 45
	NE  shift 46
	LE  shift 47
	GE  shift 48
	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 98 (src line 786)


state 69
	unit_expr:  conversion_type L_PAREN.composable_expr R_PAREN 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 114
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 70
	expr_block:  scope_def base_expr_block.    (38)

	.  reduce 38 (src line 330)


state 71
	conditional_expr:  scope_def base_conditional_expr.    (40)

	.  reduce 40 (src line 351)


state 72
	for_expr:  scope_def base_for_expr.    (47)

	.  reduce 47 (src line 420)


state 73
	base_expr_block:  L_BRACE.statement_list R_BRACE 
	statement_list: .    (16)
	scope_def: .    (28)

	R_BRACE  reduce 16 (src line 220)
	SEMICOLON  shift 39
	NEWLINE  shift 40
	LET  shift 14
	RETURN  shift 16
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 15
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	NOOP  shift 9
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 10
	unit_expr  goto 17
	composable_expr  goto 13
	statement_list  goto 115
	nonempty_statement_list  goto 116
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24
	statement  goto 117
	control_flow_expr  goto 119
	assignment_expr  goto 11
	return_expr  goto 12
	terminator  goto 118

state 74
	base_conditional_expr:  IF.composable_expr base_expr_block 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block 
	base_conditional_expr:  IF.composable_expr base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF.composable_expr base_expr_block ELSE base_expr_block 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block ELSE base_expr_block 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 120
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 75
	base_for_expr:  FOR.composable_expr expr_block 
	base_for_expr:  FOR.composable_expr NEWLINE expr_block 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 121
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 76
	declaration:  TYPE IDENT type_spec.    (7)

	.  reduce 7 (src line 141)


state 77
	declaration:  TYPE IDENT NEWLINE.type_spec 

	IDENT  shift 79
	BOOL_TYPE  shift 80
	INT_TYPE  shift 81
	UINT_TYPE  shift 82
	FLOAT_TYPE  shift 83
	BYTE_TYPE  shift 84
	STRING_TYPE  shift 85
	.  error

	scalar_type  goto 78
	type_spec  goto 122

state 78
	type_spec:  scalar_type.    (36)

	.  reduce 36 (src line 315)


state 79
	type_spec:  IDENT.    (37)

	.  reduce 37 (src line 322)


state 80
	scalar_type:  BOOL_TYPE.    (30)

	.  reduce 30 (src line 294)


state 81
	scalar_type:  INT_TYPE.    (31)

	.  reduce 31 (src line 298)


state 82
	scalar_type:  UINT_TYPE.    (32)

	.  reduce 32 (src line 301)


state 83
	scalar_type:  FLOAT_TYPE.    (33)

	.  reduce 33 (src line 304)


state 84
	scalar_type:  BYTE_TYPE.    (34)

	.  reduce 34 (src line 307)


state 85
	scalar_type:  STRING_TYPE.    (35)

	.  reduce 35 (src line 310)


state 86
	declaration:  FUNC IDENT L_PAREN.parameter_list R_PAREN base_expr_block 
	declaration:  FUNC IDENT L_PAREN.parameter_list R_PAREN type_spec base_expr_block 
	parameter_list: .    (12)

	IDENT  shift 125
	.  reduce 12 (src line 189)

	parameter_list  goto 123
	nonempty_parameter_list  goto 124

state 87
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr OR composable_expr.    (79)
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	AND  shift 42
	LT  shift 43
	GT  shift 44
	EQ  shift 45
	NE  shift 46
	LE  shift 47
	GE  shift 48
	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 79 (src line 635)


state 88
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr AND composable_expr.    (80)
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	LT  shift 43
	GT  shift 44
	EQ  shift 45
	NE  shift 46
	LE  shift 47
	GE  shift 48
	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 80 (src line 643)


state 89
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr LT composable_expr.    (81)
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 81 (src line 651)


state 90
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr GT composable_expr.    (82)
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 82 (src line 659)


state 91
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr EQ composable_expr.    (83)
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 83 (src line 667)


state 92
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr NE composable_expr.    (84)
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 84 (src line 675)


state 93
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr LE composable_expr.    (85)
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 85 (src line 683)


state 94
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr GE composable_expr.    (86)
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 86 (src line 691)


state 95
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr BITWISE_OR composable_expr.    (87)
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 87 (src line 699)


state 96
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr BITWISE_AND composable_expr.    (88)
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 88 (src line 707)


state 97
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr XOR composable_expr.    (89)
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 89 (src line 715)


state 98
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr L_SHIFT composable_expr.    (90)
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 90 (src line 723)


state 99
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr R_SHIFT composable_expr.    (91)
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 91 (src line 731)


state 100
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr ADD composable_expr.    (92)
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 92 (src line 739)


state 101
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr SUB composable_expr.    (93)
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 93 (src line 747)


state 102
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr MUL composable_expr.    (94)
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	.  reduce 94 (src line 755)


state 103
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr DIV composable_expr.    (95)
	composable_expr:  composable_expr.MOD composable_expr 

	.  reduce 95 (src line 763)


state 104
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  composable_expr MOD composable_expr.    (96)

	.  reduce 96 (src line 771)


state 105
	assignment_expr:  LET IDENT ASSIGN.expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 126
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 106
	assignment_expr:  LET IDENT type_spec.ASSIGN expr 

	ASSIGN  shift 127
	.  error


state 107
	assignment_expr:  LET IDENT NEWLINE.type_spec ASSIGN expr 

	IDENT  shift 79
	BOOL_TYPE  shift 80
	INT_TYPE  shift 81
	UINT_TYPE  shift 82
	FLOAT_TYPE  shift 83
	BYTE_TYPE  shift 84
	STRING_TYPE  shift 85
	.  error

	scalar_type  goto 78
	type_spec  goto 128

state 108
	assignment_expr:  IDENT ASSIGN expr.    (53)

	.  reduce 53 (src line 481)


state 109
	return_expr:  RETURN AT IDENT.expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 129
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 110
	unit_expr:  unit_expr DOT IDENT.    (72)

	.  reduce 72 (src line 582)


state 111
	unit_expr:  unit_expr L_PAREN argument_list.R_PAREN 

	R_PAREN  shift 130
	.  error


state 112
	argument_list:  nonempty_argument_list.    (75)
	nonempty_argument_list:  nonempty_argument_list.COMMA composable_expr 

	COMMA  shift 131
	.  reduce 75 (src line 605)


state 113
	nonempty_argument_list:  composable_expr.    (76)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 41
	AND  shift 42
	LT  shift 43
	GT  shift 44
	EQ  shift 45
	NE  shift 46
	LE  shift 47
	GE  shift 48
	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 76 (src line 610)


state 114
	unit_expr:  conversion_type L_PAREN composable_expr.R_PAREN 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	R_PAREN  shift 132
	OR  shift 41
	AND  shift 42
	LT  shift 43
	GT  shift 44
	EQ  shift 45
	NE  shift 46
	LE  shift 47
	GE  shift 48
	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  error


state 115
	base_expr_block:  L_BRACE statement_list.R_BRACE 

	R_BRACE  shift 133
	.  error


state 116
	statement_list:  nonempty_statement_list.    (17)
	nonempty_statement_list:  nonempty_statement_list.statement 
	scope_def: .    (28)

	R_BRACE  reduce 17 (src line 224)
	SEMICOLON  shift 39
	NEWLINE  shift 40
	LET  shift 14
	RETURN  shift 16
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 15
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	NOOP  shift 9
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 10
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24
	statement  goto 134
	control_flow_expr  goto 119
	assignment_expr  goto 11
	return_expr  goto 12
	terminator  goto 118

state 117
	nonempty_statement_list:  statement.    (18)

	.  reduce 18 (src line 229)


state 118
	statement:  terminator.    (22)

	.  reduce 22 (src line 251)


state 119
	statement:  control_flow_expr.terminator 

	SEMICOLON  shift 39
	NEWLINE  shift 40
	.  error

	terminator  goto 135

state 120
	base_conditional_expr:  IF composable_expr.base_expr_block 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block 
	base_conditional_expr:  IF composable_expr.base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr.base_expr_block ELSE base_expr_block 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block ELSE base_expr_block 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	L_BRACE  shift 73
	NEWLINE  shift 137
	OR  shift 41
	AND  shift 42
	LT  shift 43
	GT  shift 44
	EQ  shift 45
	NE  shift 46
	LE  shift 47
	GE  shift 48
	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  error

	base_expr_block  goto 136

state 121
	base_for_expr:  FOR composable_expr.expr_block 
	base_for_expr:  FOR composable_expr.NEWLINE expr_block 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	scope_def: .    (28)

	NEWLINE  shift 139
	OR  shift 41
	AND  shift 42
	LT  shift 43
	GT  shift 44
	EQ  shift 45
	NE  shift 46
	LE  shift 47
	GE  shift 48
	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	IDENT  shift 141
	.  reduce 28 (src line 281)

	scope_def  goto 140
	expr_block  goto 138

state 122
	declaration:  TYPE IDENT NEWLINE type_spec.    (8)

	.  reduce 8 (src line 149)


state 123
	declaration:  FUNC IDENT L_PAREN parameter_list.R_PAREN base_expr_block 
	declaration:  FUNC IDENT L_PAREN parameter_list.R_PAREN type_spec base_expr_block 

	R_PAREN  shift 142
	.  error


state 124
	parameter_list:  nonempty_parameter_list.    (13)
	nonempty_parameter_list:  nonempty_parameter_list.COMMA IDENT type_spec 

	COMMA  shift 143
	.  reduce 13 (src line 193)


state 125
	nonempty_parameter_list:  IDENT.type_spec 

	IDENT  shift 79
	BOOL_TYPE  shift 80
	INT_TYPE  shift 81
	UINT_TYPE  shift 82
	FLOAT_TYPE  shift 83
	BYTE_TYPE  shift 84
	STRING_TYPE  shift 85
	.  error

	scalar_type  goto 78
	type_spec  goto 144

state 126
	assignment_expr:  LET IDENT ASSIGN expr.    (50)

	.  reduce 50 (src line 449)


state 127
	assignment_expr:  LET IDENT type_spec ASSIGN.expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 145
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 128
	assignment_expr:  LET IDENT NEWLINE type_spec.ASSIGN expr 

	ASSIGN  shift 146
	.  error


state 129
	return_expr:  RETURN AT IDENT expr.    (55)

	.  reduce 55 (src line 500)


state 130
	unit_expr:  unit_expr L_PAREN argument_list R_PAREN.    (73)

	.  reduce 73 (src line 590)


state 131
	nonempty_argument_list:  nonempty_argument_list COMMA.composable_expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 147
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 132
	unit_expr:  conversion_type L_PAREN composable_expr R_PAREN.    (68)

	.  reduce 68 (src line 564)


state 133
	base_expr_block:  L_BRACE statement_list R_BRACE.    (39)

	.  reduce 39 (src line 340)


state 134
	nonempty_statement_list:  nonempty_statement_list statement.    (19)

	.  reduce 19 (src line 235)


state 135
	statement:  control_flow_expr terminator.    (23)

	.  reduce 23 (src line 255)


state 136
	base_conditional_expr:  IF composable_expr base_expr_block.    (41)
	base_conditional_expr:  IF composable_expr base_expr_block.ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr base_expr_block.ELSE base_expr_block 

	ELSE  shift 148
	.  reduce 41 (src line 361)


state 137
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block 
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block ELSE base_expr_block 

	L_BRACE  shift 73
	.  error

	base_expr_block  goto 149

state 138
	base_for_expr:  FOR composable_expr expr_block.    (48)

	.  reduce 48 (src line 430)


state 139
	base_for_expr:  FOR composable_expr NEWLINE.expr_block 
	scope_def: .    (28)

	IDENT  shift 141
	.  reduce 28 (src line 281)

	scope_def  goto 140
	expr_block  goto 150

state 140
	expr_block:  scope_def.base_expr_block 

	L_BRACE  shift 73
	.  error

	base_expr_block  goto 70

state 141
	scope_def:  IDENT.AT 

	AT  shift 60
	.  error


state 142
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN.base_expr_block 
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN.type_spec base_expr_block 

	L_BRACE  shift 73
	IDENT  shift 79
	BOOL_TYPE  shift 80
	INT_TYPE  shift 81
	UINT_TYPE  shift 82
	FLOAT_TYPE  shift 83
	BYTE_TYPE  shift 84
	STRING_TYPE  shift 85
	.  error

	scalar_type  goto 78
	base_expr_block  goto 151
	type_spec  goto 152

state 143
	nonempty_parameter_list:  nonempty_parameter_list COMMA.IDENT type_spec 

	IDENT  shift 153
	.  error


state 144
	nonempty_parameter_list:  IDENT type_spec.    (14)

	.  reduce 14 (src line 198)


state 145
	assignment_expr:  LET IDENT type_spec ASSIGN expr.    (51)

	.  reduce 51 (src line 459)


state 146
	assignment_expr:  LET IDENT NEWLINE type_spec ASSIGN.expr 
	scope_def: .    (28)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 64
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	FLOAT_TYPE  shift 33
	BYTE_TYPE  shift 30
	.  reduce 28 (src line 281)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 154
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 147
	nonempty_argument_list:  nonempty_argument_list COMMA composable_expr.    (77)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 41
	AND  shift 42
	LT  shift 43
	GT  shift 44
	EQ  shift 45
	NE  shift 46
	LE  shift 47
	GE  shift 48
	BITWISE_OR  shift 49
	BITWISE_AND  shift 50
	XOR  shift 51
	L_SHIFT  shift 52
	R_SHIFT  shift 53
	ADD  shift 54
	SUB  shift 55
	MUL  shift 56
	DIV  shift 57
	MOD  shift 58
	.  reduce 77 (src line 619)


state 148
	base_conditional_expr:  IF composable_expr base_expr_block ELSE.base_conditional_expr 
	base_conditional_expr:  IF composable_expr base_expr_block ELSE.base_expr_block 

	L_BRACE  shift 73
	IF  shift 74
	.  error

	base_expr_block  goto 156
	base_conditional_expr  goto 155

state 149
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.    (42)
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.ELSE base_expr_block 

	ELSE  shift 157
	.  reduce 42 (src line 370)


state 150
	base_for_expr:  FOR composable_expr NEWLINE expr_block.    (49)

	.  reduce 49 (src line 439)


state 151
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN base_expr_block.    (9)

	.  reduce 9 (src line 157)


state 152
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN type_spec.base_expr_block 

	L_BRACE  shift 73
	.  error

	base_expr_block  goto 158

state 153
	nonempty_parameter_list:  nonempty_parameter_list COMMA IDENT.type_spec 

	IDENT  shift 79
	BOOL_TYPE  shift 80
	INT_TYPE  shift 81
	UINT_TYPE  shift 82
	FLOAT_TYPE  shift 83
	BYTE_TYPE  shift 84
	STRING_TYPE  shift 85
	.  error

	scalar_type  goto 78
	type_spec  goto 159

state 154
	assignment_expr:  LET IDENT NEWLINE type_spec ASSIGN expr.    (52)

	.  reduce 52 (src line 470)


state 155
	base_conditional_expr:  IF composable_expr base_expr_block ELSE base_conditional_expr.    (43)

	.  reduce 43 (src line 378)


state 156
	base_conditional_expr:  IF composable_expr base_expr_block ELSE base_expr_block.    (45)

	.  reduce 45 (src line 398)


state 157
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE.base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE.base_expr_block 

	L_BRACE  shift 73
	IF  shift 74
	.  error

	base_expr_block  goto 161
	base_conditional_expr  goto 160

state 158
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN type_spec base_expr_block.    (10)

	.  reduce 10 (src line 168)


state 159
	nonempty_parameter_list:  nonempty_parameter_list COMMA IDENT type_spec.    (15)

	.  reduce 15 (src line 208)


state 160
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE base_conditional_expr.    (44)

	.  reduce 44 (src line 388)


state 161
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE base_expr_block.    (46)

	.  reduce 46 (src line 408)


60 terminals, 30 nonterminals
99 grammar rules, 162/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
79 working sets used
memory: parser 481/120000
94 extra closures
797 shift entries, 6 exceptions
84 goto entries
265 entries saved by goto default
Optimizer space used: output 411/120000
411 table entries, 51 zero
maximum spread: 60, maximum offset: 157
