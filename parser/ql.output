
state 0
	$accept: .start $end 
	declaration_list: .    (2)

	NEWLINE  shift 5
	TYPE  shift 6
	FUNC  shift 7
	.  reduce 2 (src line 117)

	declaration  goto 4
	declaration_list  goto 2
	nonempty_declaration_list  goto 3
	start  goto 1

state 1
	$accept:  start.$end 

	$end  accept
	.  error


state 2
	start:  declaration_list.    (1)

	.  reduce 1 (src line 107)


state 3
	declaration_list:  nonempty_declaration_list.    (3)
	nonempty_declaration_list:  nonempty_declaration_list.declaration 

	NEWLINE  shift 5
	TYPE  shift 6
	FUNC  shift 7
	.  reduce 3 (src line 121)

	declaration  goto 8

state 4
	nonempty_declaration_list:  declaration.    (4)

	.  reduce 4 (src line 125)


state 5
	declaration:  NEWLINE.    (6)

	.  reduce 6 (src line 138)


state 6
	declaration:  TYPE.IDENT type_spec 
	declaration:  TYPE.IDENT NEWLINE type_spec 

	IDENT  shift 9
	.  error


state 7
	declaration:  FUNC.IDENT L_PAREN parameter_list R_PAREN base_expr_block 
	declaration:  FUNC.IDENT L_PAREN parameter_list R_PAREN type_spec base_expr_block 

	IDENT  shift 10
	.  error


state 8
	nonempty_declaration_list:  nonempty_declaration_list declaration.    (5)

	.  reduce 5 (src line 131)


state 9
	declaration:  TYPE IDENT.type_spec 
	declaration:  TYPE IDENT.NEWLINE type_spec 

	NEWLINE  shift 12
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	IDENT  shift 14
	.  error

	scalar_type  goto 15
	unnamed_type_spec  goto 13
	type_spec  goto 11

state 10
	declaration:  FUNC IDENT.L_PAREN parameter_list R_PAREN base_expr_block 
	declaration:  FUNC IDENT.L_PAREN parameter_list R_PAREN type_spec base_expr_block 

	L_PAREN  shift 24
	.  error


state 11
	declaration:  TYPE IDENT type_spec.    (7)

	.  reduce 7 (src line 143)


state 12
	declaration:  TYPE IDENT NEWLINE.type_spec 

	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	IDENT  shift 14
	.  error

	scalar_type  goto 15
	unnamed_type_spec  goto 13
	type_spec  goto 25

state 13
	type_spec:  unnamed_type_spec.    (35)

	.  reduce 35 (src line 310)


state 14
	type_spec:  IDENT.    (36)

	.  reduce 36 (src line 314)


state 15
	unnamed_type_spec:  scalar_type.    (37)

	.  reduce 37 (src line 321)


state 16
	unnamed_type_spec:  ITER_TYPE.    (38)
	unnamed_type_spec:  ITER_TYPE.L_BRACKET type_spec R_BRACKET 

	L_BRACKET  shift 26
	.  reduce 38 (src line 328)


state 17
	unnamed_type_spec:  RECORD_TYPE.    (40)
	unnamed_type_spec:  RECORD_TYPE.LT parameter_list GT 

	LT  shift 27
	.  reduce 40 (src line 344)


state 18
	scalar_type:  BOOL_TYPE.    (29)

	.  reduce 29 (src line 289)


state 19
	scalar_type:  INT_TYPE.    (30)

	.  reduce 30 (src line 293)


state 20
	scalar_type:  UINT_TYPE.    (31)

	.  reduce 31 (src line 296)


state 21
	scalar_type:  FLOAT_TYPE.    (32)

	.  reduce 32 (src line 299)


state 22
	scalar_type:  BYTE_TYPE.    (33)

	.  reduce 33 (src line 302)


state 23
	scalar_type:  STRING_TYPE.    (34)

	.  reduce 34 (src line 305)


state 24
	declaration:  FUNC IDENT L_PAREN.parameter_list R_PAREN base_expr_block 
	declaration:  FUNC IDENT L_PAREN.parameter_list R_PAREN type_spec base_expr_block 
	parameter_list: .    (11)

	IDENT  shift 30
	.  reduce 11 (src line 184)

	parameter_list  goto 28
	nonempty_parameter_list  goto 29

state 25
	declaration:  TYPE IDENT NEWLINE type_spec.    (8)

	.  reduce 8 (src line 151)


state 26
	unnamed_type_spec:  ITER_TYPE L_BRACKET.type_spec R_BRACKET 

	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	IDENT  shift 14
	.  error

	scalar_type  goto 15
	unnamed_type_spec  goto 13
	type_spec  goto 31

state 27
	unnamed_type_spec:  RECORD_TYPE LT.parameter_list GT 
	parameter_list: .    (11)

	IDENT  shift 30
	.  reduce 11 (src line 184)

	parameter_list  goto 32
	nonempty_parameter_list  goto 29

state 28
	declaration:  FUNC IDENT L_PAREN parameter_list.R_PAREN base_expr_block 
	declaration:  FUNC IDENT L_PAREN parameter_list.R_PAREN type_spec base_expr_block 

	R_PAREN  shift 33
	.  error


state 29
	parameter_list:  nonempty_parameter_list.    (12)
	nonempty_parameter_list:  nonempty_parameter_list.COMMA IDENT type_spec 

	COMMA  shift 34
	.  reduce 12 (src line 188)


state 30
	nonempty_parameter_list:  IDENT.type_spec 

	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	IDENT  shift 14
	.  error

	scalar_type  goto 15
	unnamed_type_spec  goto 13
	type_spec  goto 35

state 31
	unnamed_type_spec:  ITER_TYPE L_BRACKET type_spec.R_BRACKET 

	R_BRACKET  shift 36
	.  error


state 32
	unnamed_type_spec:  RECORD_TYPE LT parameter_list.GT 

	GT  shift 37
	.  error


state 33
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN.base_expr_block 
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN.type_spec base_expr_block 

	L_BRACE  shift 40
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	IDENT  shift 14
	.  error

	scalar_type  goto 15
	base_expr_block  goto 38
	unnamed_type_spec  goto 13
	type_spec  goto 39

state 34
	nonempty_parameter_list:  nonempty_parameter_list COMMA.IDENT type_spec 

	IDENT  shift 41
	.  error


state 35
	nonempty_parameter_list:  IDENT type_spec.    (13)

	.  reduce 13 (src line 193)


state 36
	unnamed_type_spec:  ITER_TYPE L_BRACKET type_spec R_BRACKET.    (39)

	.  reduce 39 (src line 335)


state 37
	unnamed_type_spec:  RECORD_TYPE LT parameter_list GT.    (41)

	.  reduce 41 (src line 351)


state 38
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN base_expr_block.    (9)

	.  reduce 9 (src line 159)


state 39
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN type_spec.base_expr_block 

	L_BRACE  shift 40
	.  error

	base_expr_block  goto 42

state 40
	base_expr_block:  L_BRACE.statement_list R_BRACE 
	statement_list: .    (15)
	scope_def: .    (27)

	R_BRACE  reduce 15 (src line 215)
	L_PAREN  shift 64
	SEMICOLON  shift 48
	NEWLINE  shift 49
	VAR  shift 62
	CONST  shift 61
	RETURN  shift 57
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 56
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	NOOP  shift 50
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	assignment_type  goto 55
	expr  goto 51
	unit_expr  goto 58
	composable_expr  goto 54
	statement_list  goto 43
	nonempty_statement_list  goto 44
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	statement  goto 45
	control_flow_expr  goto 47
	assignment_expr  goto 52
	return_expr  goto 53
	unnamed_type_spec  goto 65
	terminator  goto 46

state 41
	nonempty_parameter_list:  nonempty_parameter_list COMMA IDENT.type_spec 

	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	IDENT  shift 14
	.  error

	scalar_type  goto 15
	unnamed_type_spec  goto 13
	type_spec  goto 75

state 42
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN type_spec base_expr_block.    (10)

	.  reduce 10 (src line 170)


state 43
	base_expr_block:  L_BRACE statement_list.R_BRACE 

	R_BRACE  shift 76
	.  error


state 44
	statement_list:  nonempty_statement_list.    (16)
	nonempty_statement_list:  nonempty_statement_list.statement 
	scope_def: .    (27)

	R_BRACE  reduce 16 (src line 219)
	L_PAREN  shift 64
	SEMICOLON  shift 48
	NEWLINE  shift 49
	VAR  shift 62
	CONST  shift 61
	RETURN  shift 57
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 56
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	NOOP  shift 50
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	assignment_type  goto 55
	expr  goto 51
	unit_expr  goto 58
	composable_expr  goto 54
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	statement  goto 77
	control_flow_expr  goto 47
	assignment_expr  goto 52
	return_expr  goto 53
	unnamed_type_spec  goto 65
	terminator  goto 46

state 45
	nonempty_statement_list:  statement.    (17)

	.  reduce 17 (src line 224)


state 46
	statement:  terminator.    (21)

	.  reduce 21 (src line 246)


state 47
	statement:  control_flow_expr.terminator 

	SEMICOLON  shift 48
	NEWLINE  shift 49
	.  error

	terminator  goto 78

state 48
	terminator:  SEMICOLON.    (19)

	.  reduce 19 (src line 237)


state 49
	terminator:  NEWLINE.    (20)

	.  reduce 20 (src line 241)


state 50
	control_flow_expr:  NOOP.    (23)

	.  reduce 23 (src line 255)


state 51
	control_flow_expr:  expr.    (24)

	.  reduce 24 (src line 262)


state 52
	control_flow_expr:  assignment_expr.    (25)

	.  reduce 25 (src line 268)


state 53
	control_flow_expr:  return_expr.    (26)

	.  reduce 26 (src line 271)


state 54
	expr:  composable_expr.    (62)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 79
	AND  shift 80
	LT  shift 81
	GT  shift 82
	EQ  shift 83
	NE  shift 84
	LE  shift 85
	GE  shift 86
	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 62 (src line 551)


state 55
	assignment_expr:  assignment_type.IDENT ASSIGN expr 
	assignment_expr:  assignment_type.IDENT type_spec ASSIGN expr 
	assignment_expr:  assignment_type.IDENT NEWLINE type_spec ASSIGN expr 

	IDENT  shift 97
	.  error


state 56
	scope_def:  IDENT.AT 
	assignment_expr:  IDENT.ASSIGN expr 
	unit_expr:  IDENT.    (68)

	ASSIGN  shift 99
	AT  shift 98
	.  reduce 68 (src line 576)


state 57
	return_expr:  RETURN.expr 
	return_expr:  RETURN.AT IDENT expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	AT  shift 101
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	expr  goto 100
	unit_expr  goto 58
	composable_expr  goto 54
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 58
	unit_expr:  unit_expr.DOT IDENT 
	unit_expr:  unit_expr.L_PAREN argument_list R_PAREN 
	composable_expr:  unit_expr.    (85)

	L_PAREN  shift 104
	DOT  shift 103
	.  reduce 85 (src line 697)


state 59
	composable_expr:  SUB.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 105
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 60
	composable_expr:  NOT.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 106
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 61
	assignment_type:  CONST.    (54)

	.  reduce 54 (src line 481)


state 62
	assignment_type:  VAR.    (55)

	.  reduce 55 (src line 485)


state 63
	unit_expr:  scalar_literal.    (69)

	.  reduce 69 (src line 583)


state 64
	unit_expr:  L_PAREN.argument_list R_PAREN 
	argument_list: .    (77)
	scope_def: .    (27)

	L_PAREN  shift 64
	R_PAREN  reduce 77 (src line 636)
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 111
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 110
	argument_list  goto 107
	nonempty_positional_argument_list  goto 108
	nonempty_named_argument_list  goto 109
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 65
	unit_expr:  unnamed_type_spec.L_PAREN argument_list R_PAREN 

	L_PAREN  shift 112
	.  error


state 66
	unit_expr:  expr_block.    (72)

	.  reduce 72 (src line 608)


state 67
	unit_expr:  conditional_expr.    (73)

	.  reduce 73 (src line 611)


state 68
	unit_expr:  for_expr.    (74)

	.  reduce 74 (src line 614)


state 69
	scalar_literal:  BYTE_LITERAL.    (63)

	.  reduce 63 (src line 557)


state 70
	scalar_literal:  STRING_LITERAL.    (64)

	.  reduce 64 (src line 561)


state 71
	scalar_literal:  INT_LITERAL.    (65)

	.  reduce 65 (src line 564)


state 72
	scalar_literal:  FLOAT_LITERAL.    (66)

	.  reduce 66 (src line 567)


state 73
	scalar_literal:  BOOL_LITERAL.    (67)

	.  reduce 67 (src line 570)


state 74
	expr_block:  scope_def.base_expr_block 
	conditional_expr:  scope_def.base_conditional_expr 
	for_expr:  scope_def.base_for_expr 

	L_BRACE  shift 40
	IF  shift 116
	FOR  shift 117
	.  error

	base_expr_block  goto 113
	base_conditional_expr  goto 114
	base_for_expr  goto 115

state 75
	nonempty_parameter_list:  nonempty_parameter_list COMMA IDENT type_spec.    (14)

	.  reduce 14 (src line 203)


state 76
	base_expr_block:  L_BRACE statement_list R_BRACE.    (43)

	.  reduce 43 (src line 372)


state 77
	nonempty_statement_list:  nonempty_statement_list statement.    (18)

	.  reduce 18 (src line 230)


state 78
	statement:  control_flow_expr terminator.    (22)

	.  reduce 22 (src line 250)


state 79
	composable_expr:  composable_expr OR.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 118
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 80
	composable_expr:  composable_expr AND.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 119
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 81
	composable_expr:  composable_expr LT.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 120
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 82
	composable_expr:  composable_expr GT.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 121
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 83
	composable_expr:  composable_expr EQ.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 122
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 84
	composable_expr:  composable_expr NE.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 123
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 85
	composable_expr:  composable_expr LE.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 124
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 86
	composable_expr:  composable_expr GE.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 125
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 87
	composable_expr:  composable_expr BITWISE_OR.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 126
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 88
	composable_expr:  composable_expr BITWISE_AND.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 127
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 89
	composable_expr:  composable_expr XOR.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 128
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 90
	composable_expr:  composable_expr L_SHIFT.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 129
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 91
	composable_expr:  composable_expr R_SHIFT.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 130
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 92
	composable_expr:  composable_expr ADD.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 131
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 93
	composable_expr:  composable_expr SUB.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 132
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 94
	composable_expr:  composable_expr MUL.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 133
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 95
	composable_expr:  composable_expr DIV.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 134
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 96
	composable_expr:  composable_expr MOD.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 135
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 97
	assignment_expr:  assignment_type IDENT.ASSIGN expr 
	assignment_expr:  assignment_type IDENT.type_spec ASSIGN expr 
	assignment_expr:  assignment_type IDENT.NEWLINE type_spec ASSIGN expr 

	ASSIGN  shift 136
	NEWLINE  shift 138
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	IDENT  shift 14
	.  error

	scalar_type  goto 15
	unnamed_type_spec  goto 13
	type_spec  goto 137

state 98
	scope_def:  IDENT AT.    (28)

	.  reduce 28 (src line 280)


state 99
	assignment_expr:  IDENT ASSIGN.expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	expr  goto 139
	unit_expr  goto 58
	composable_expr  goto 54
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 100
	return_expr:  RETURN expr.    (60)

	.  reduce 60 (src line 532)


state 101
	return_expr:  RETURN AT.IDENT expr 

	IDENT  shift 140
	.  error


state 102
	scope_def:  IDENT.AT 
	unit_expr:  IDENT.    (68)

	AT  shift 98
	.  reduce 68 (src line 576)


state 103
	unit_expr:  unit_expr DOT.IDENT 

	IDENT  shift 141
	.  error


state 104
	unit_expr:  unit_expr L_PAREN.argument_list R_PAREN 
	argument_list: .    (77)
	scope_def: .    (27)

	L_PAREN  shift 64
	R_PAREN  reduce 77 (src line 636)
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 111
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 110
	argument_list  goto 142
	nonempty_positional_argument_list  goto 108
	nonempty_named_argument_list  goto 109
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 105
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  SUB composable_expr.    (104)

	.  reduce 104 (src line 845)


state 106
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  NOT composable_expr.    (105)

	LT  shift 81
	GT  shift 82
	EQ  shift 83
	NE  shift 84
	LE  shift 85
	GE  shift 86
	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 105 (src line 852)


state 107
	unit_expr:  L_PAREN argument_list.R_PAREN 

	R_PAREN  shift 143
	.  error


state 108
	argument_list:  nonempty_positional_argument_list.    (78)
	argument_list:  nonempty_positional_argument_list.COMMA nonempty_named_argument_list 
	nonempty_positional_argument_list:  nonempty_positional_argument_list.COMMA composable_expr 

	COMMA  shift 144
	.  reduce 78 (src line 640)


state 109
	argument_list:  nonempty_named_argument_list.    (79)
	nonempty_named_argument_list:  nonempty_named_argument_list.COMMA IDENT ASSIGN composable_expr 

	COMMA  shift 145
	.  reduce 79 (src line 643)


state 110
	nonempty_positional_argument_list:  composable_expr.    (81)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 79
	AND  shift 80
	LT  shift 81
	GT  shift 82
	EQ  shift 83
	NE  shift 84
	LE  shift 85
	GE  shift 86
	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 81 (src line 652)


state 111
	scope_def:  IDENT.AT 
	unit_expr:  IDENT.    (68)
	nonempty_named_argument_list:  IDENT.ASSIGN composable_expr 

	ASSIGN  shift 146
	AT  shift 98
	.  reduce 68 (src line 576)


state 112
	unit_expr:  unnamed_type_spec L_PAREN.argument_list R_PAREN 
	argument_list: .    (77)
	scope_def: .    (27)

	L_PAREN  shift 64
	R_PAREN  reduce 77 (src line 636)
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 111
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 110
	argument_list  goto 147
	nonempty_positional_argument_list  goto 108
	nonempty_named_argument_list  goto 109
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 113
	expr_block:  scope_def base_expr_block.    (42)

	.  reduce 42 (src line 362)


state 114
	conditional_expr:  scope_def base_conditional_expr.    (44)

	.  reduce 44 (src line 383)


state 115
	for_expr:  scope_def base_for_expr.    (51)

	.  reduce 51 (src line 452)


state 116
	base_conditional_expr:  IF.composable_expr base_expr_block 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block 
	base_conditional_expr:  IF.composable_expr base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF.composable_expr base_expr_block ELSE base_expr_block 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block ELSE base_expr_block 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 148
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 117
	base_for_expr:  FOR.composable_expr expr_block 
	base_for_expr:  FOR.composable_expr NEWLINE expr_block 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 149
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 118
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr OR composable_expr.    (86)
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	AND  shift 80
	LT  shift 81
	GT  shift 82
	EQ  shift 83
	NE  shift 84
	LE  shift 85
	GE  shift 86
	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 86 (src line 701)


state 119
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr AND composable_expr.    (87)
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	LT  shift 81
	GT  shift 82
	EQ  shift 83
	NE  shift 84
	LE  shift 85
	GE  shift 86
	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 87 (src line 709)


state 120
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr LT composable_expr.    (88)
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 88 (src line 717)


state 121
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr GT composable_expr.    (89)
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 89 (src line 725)


state 122
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr EQ composable_expr.    (90)
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 90 (src line 733)


state 123
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr NE composable_expr.    (91)
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 91 (src line 741)


state 124
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr LE composable_expr.    (92)
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 92 (src line 749)


state 125
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr GE composable_expr.    (93)
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 93 (src line 757)


state 126
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr BITWISE_OR composable_expr.    (94)
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 94 (src line 765)


state 127
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr BITWISE_AND composable_expr.    (95)
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 95 (src line 773)


state 128
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr XOR composable_expr.    (96)
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 96 (src line 781)


state 129
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr L_SHIFT composable_expr.    (97)
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 97 (src line 789)


state 130
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr R_SHIFT composable_expr.    (98)
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 98 (src line 797)


state 131
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr ADD composable_expr.    (99)
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 99 (src line 805)


state 132
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr SUB composable_expr.    (100)
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 100 (src line 813)


state 133
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr MUL composable_expr.    (101)
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	.  reduce 101 (src line 821)


state 134
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr DIV composable_expr.    (102)
	composable_expr:  composable_expr.MOD composable_expr 

	.  reduce 102 (src line 829)


state 135
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  composable_expr MOD composable_expr.    (103)

	.  reduce 103 (src line 837)


state 136
	assignment_expr:  assignment_type IDENT ASSIGN.expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	expr  goto 150
	unit_expr  goto 58
	composable_expr  goto 54
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 137
	assignment_expr:  assignment_type IDENT type_spec.ASSIGN expr 

	ASSIGN  shift 151
	.  error


state 138
	assignment_expr:  assignment_type IDENT NEWLINE.type_spec ASSIGN expr 

	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	IDENT  shift 14
	.  error

	scalar_type  goto 15
	unnamed_type_spec  goto 13
	type_spec  goto 152

state 139
	assignment_expr:  IDENT ASSIGN expr.    (59)

	.  reduce 59 (src line 521)


state 140
	return_expr:  RETURN AT IDENT.expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	expr  goto 153
	unit_expr  goto 58
	composable_expr  goto 54
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 141
	unit_expr:  unit_expr DOT IDENT.    (75)

	.  reduce 75 (src line 617)


state 142
	unit_expr:  unit_expr L_PAREN argument_list.R_PAREN 

	R_PAREN  shift 154
	.  error


state 143
	unit_expr:  L_PAREN argument_list R_PAREN.    (70)

	.  reduce 70 (src line 589)


state 144
	argument_list:  nonempty_positional_argument_list COMMA.nonempty_named_argument_list 
	nonempty_positional_argument_list:  nonempty_positional_argument_list COMMA.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 111
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 156
	nonempty_named_argument_list  goto 155
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 145
	nonempty_named_argument_list:  nonempty_named_argument_list COMMA.IDENT ASSIGN composable_expr 

	IDENT  shift 157
	.  error


state 146
	nonempty_named_argument_list:  IDENT ASSIGN.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 158
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 147
	unit_expr:  unnamed_type_spec L_PAREN argument_list.R_PAREN 

	R_PAREN  shift 159
	.  error


state 148
	base_conditional_expr:  IF composable_expr.base_expr_block 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block 
	base_conditional_expr:  IF composable_expr.base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr.base_expr_block ELSE base_expr_block 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block ELSE base_expr_block 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	L_BRACE  shift 40
	NEWLINE  shift 161
	OR  shift 79
	AND  shift 80
	LT  shift 81
	GT  shift 82
	EQ  shift 83
	NE  shift 84
	LE  shift 85
	GE  shift 86
	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  error

	base_expr_block  goto 160

state 149
	base_for_expr:  FOR composable_expr.expr_block 
	base_for_expr:  FOR composable_expr.NEWLINE expr_block 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	scope_def: .    (27)

	NEWLINE  shift 163
	OR  shift 79
	AND  shift 80
	LT  shift 81
	GT  shift 82
	EQ  shift 83
	NE  shift 84
	LE  shift 85
	GE  shift 86
	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	IDENT  shift 165
	.  reduce 27 (src line 276)

	scope_def  goto 164
	expr_block  goto 162

state 150
	assignment_expr:  assignment_type IDENT ASSIGN expr.    (56)

	.  reduce 56 (src line 490)


state 151
	assignment_expr:  assignment_type IDENT type_spec ASSIGN.expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	expr  goto 166
	unit_expr  goto 58
	composable_expr  goto 54
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 152
	assignment_expr:  assignment_type IDENT NEWLINE type_spec.ASSIGN expr 

	ASSIGN  shift 167
	.  error


state 153
	return_expr:  RETURN AT IDENT expr.    (61)

	.  reduce 61 (src line 540)


state 154
	unit_expr:  unit_expr L_PAREN argument_list R_PAREN.    (76)

	.  reduce 76 (src line 625)


state 155
	argument_list:  nonempty_positional_argument_list COMMA nonempty_named_argument_list.    (80)
	nonempty_named_argument_list:  nonempty_named_argument_list.COMMA IDENT ASSIGN composable_expr 

	COMMA  shift 145
	.  reduce 80 (src line 646)


state 156
	nonempty_positional_argument_list:  nonempty_positional_argument_list COMMA composable_expr.    (82)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 79
	AND  shift 80
	LT  shift 81
	GT  shift 82
	EQ  shift 83
	NE  shift 84
	LE  shift 85
	GE  shift 86
	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 82 (src line 661)


state 157
	nonempty_named_argument_list:  nonempty_named_argument_list COMMA IDENT.ASSIGN composable_expr 

	ASSIGN  shift 168
	.  error


state 158
	nonempty_named_argument_list:  IDENT ASSIGN composable_expr.    (83)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 79
	AND  shift 80
	LT  shift 81
	GT  shift 82
	EQ  shift 83
	NE  shift 84
	LE  shift 85
	GE  shift 86
	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 83 (src line 672)


state 159
	unit_expr:  unnamed_type_spec L_PAREN argument_list R_PAREN.    (71)

	.  reduce 71 (src line 599)


state 160
	base_conditional_expr:  IF composable_expr base_expr_block.    (45)
	base_conditional_expr:  IF composable_expr base_expr_block.ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr base_expr_block.ELSE base_expr_block 

	ELSE  shift 169
	.  reduce 45 (src line 393)


state 161
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block 
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block ELSE base_expr_block 

	L_BRACE  shift 40
	.  error

	base_expr_block  goto 170

state 162
	base_for_expr:  FOR composable_expr expr_block.    (52)

	.  reduce 52 (src line 462)


state 163
	base_for_expr:  FOR composable_expr NEWLINE.expr_block 
	scope_def: .    (27)

	IDENT  shift 165
	.  reduce 27 (src line 276)

	scope_def  goto 164
	expr_block  goto 171

state 164
	expr_block:  scope_def.base_expr_block 

	L_BRACE  shift 40
	.  error

	base_expr_block  goto 113

state 165
	scope_def:  IDENT.AT 

	AT  shift 98
	.  error


state 166
	assignment_expr:  assignment_type IDENT type_spec ASSIGN expr.    (57)

	.  reduce 57 (src line 500)


state 167
	assignment_expr:  assignment_type IDENT NEWLINE type_spec ASSIGN.expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	expr  goto 172
	unit_expr  goto 58
	composable_expr  goto 54
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 168
	nonempty_named_argument_list:  nonempty_named_argument_list COMMA IDENT ASSIGN.composable_expr 
	scope_def: .    (27)

	L_PAREN  shift 64
	BOOL_TYPE  shift 18
	INT_TYPE  shift 19
	UINT_TYPE  shift 20
	FLOAT_TYPE  shift 21
	BYTE_TYPE  shift 22
	STRING_TYPE  shift 23
	ITER_TYPE  shift 16
	RECORD_TYPE  shift 17
	NOT  shift 60
	SUB  shift 59
	IDENT  shift 102
	BYTE_LITERAL  shift 69
	STRING_LITERAL  shift 70
	INT_LITERAL  shift 71
	FLOAT_LITERAL  shift 72
	BOOL_LITERAL  shift 73
	.  reduce 27 (src line 276)

	scalar_literal  goto 63
	scalar_type  goto 15
	unit_expr  goto 58
	composable_expr  goto 173
	scope_def  goto 74
	expr_block  goto 66
	conditional_expr  goto 67
	for_expr  goto 68
	unnamed_type_spec  goto 65

state 169
	base_conditional_expr:  IF composable_expr base_expr_block ELSE.base_conditional_expr 
	base_conditional_expr:  IF composable_expr base_expr_block ELSE.base_expr_block 

	L_BRACE  shift 40
	IF  shift 116
	.  error

	base_expr_block  goto 175
	base_conditional_expr  goto 174

state 170
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.    (46)
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.ELSE base_expr_block 

	ELSE  shift 176
	.  reduce 46 (src line 402)


state 171
	base_for_expr:  FOR composable_expr NEWLINE expr_block.    (53)

	.  reduce 53 (src line 471)


state 172
	assignment_expr:  assignment_type IDENT NEWLINE type_spec ASSIGN expr.    (58)

	.  reduce 58 (src line 511)


state 173
	nonempty_named_argument_list:  nonempty_named_argument_list COMMA IDENT ASSIGN composable_expr.    (84)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 79
	AND  shift 80
	LT  shift 81
	GT  shift 82
	EQ  shift 83
	NE  shift 84
	LE  shift 85
	GE  shift 86
	BITWISE_OR  shift 87
	BITWISE_AND  shift 88
	XOR  shift 89
	L_SHIFT  shift 90
	R_SHIFT  shift 91
	ADD  shift 92
	SUB  shift 93
	MUL  shift 94
	DIV  shift 95
	MOD  shift 96
	.  reduce 84 (src line 683)


state 174
	base_conditional_expr:  IF composable_expr base_expr_block ELSE base_conditional_expr.    (47)

	.  reduce 47 (src line 410)


state 175
	base_conditional_expr:  IF composable_expr base_expr_block ELSE base_expr_block.    (49)

	.  reduce 49 (src line 430)


state 176
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE.base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE.base_expr_block 

	L_BRACE  shift 40
	IF  shift 116
	.  error

	base_expr_block  goto 178
	base_conditional_expr  goto 177

state 177
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE base_conditional_expr.    (48)

	.  reduce 48 (src line 420)


state 178
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE base_expr_block.    (50)

	.  reduce 50 (src line 440)


63 terminals, 32 nonterminals
106 grammar rules, 179/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
81 working sets used
memory: parser 626/120000
107 extra closures
1036 shift entries, 6 exceptions
99 goto entries
307 entries saved by goto default
Optimizer space used: output 420/120000
420 table entries, 27 zero
maximum spread: 63, maximum offset: 176
