
state 0
	$accept: .start $end 
	statement_list: .    (2)
	scope_def: .    (14)

	$end  reduce 2 (src line 107)
	SEMICOLON  shift 7
	NEWLINE  shift 8
	LET  shift 14
	RETURN  shift 16
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 15
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	NOOP  shift 9
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 10
	unit_expr  goto 17
	composable_expr  goto 13
	statement_list  goto 2
	nonempty_statement_list  goto 3
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24
	statement  goto 4
	control_flow_expr  goto 6
	assignment_expr  goto 11
	return_expr  goto 12
	start  goto 1
	terminator  goto 5

state 1
	$accept:  start.$end 

	$end  accept
	.  error


state 2
	start:  statement_list.    (1)

	.  reduce 1 (src line 97)


state 3
	statement_list:  nonempty_statement_list.    (3)
	nonempty_statement_list:  nonempty_statement_list.statement 
	scope_def: .    (14)

	$end  reduce 3 (src line 111)
	R_BRACE  reduce 3 (src line 111)
	SEMICOLON  shift 7
	NEWLINE  shift 8
	LET  shift 14
	RETURN  shift 16
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 15
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	NOOP  shift 9
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 10
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24
	statement  goto 35
	control_flow_expr  goto 6
	assignment_expr  goto 11
	return_expr  goto 12
	terminator  goto 5

state 4
	nonempty_statement_list:  statement.    (4)

	.  reduce 4 (src line 117)


state 5
	statement:  terminator.    (8)

	.  reduce 8 (src line 139)


state 6
	statement:  control_flow_expr.terminator 

	SEMICOLON  shift 7
	NEWLINE  shift 8
	.  error

	terminator  goto 36

state 7
	terminator:  SEMICOLON.    (6)

	.  reduce 6 (src line 130)


state 8
	terminator:  NEWLINE.    (7)

	.  reduce 7 (src line 134)


state 9
	control_flow_expr:  NOOP.    (10)

	.  reduce 10 (src line 148)


state 10
	control_flow_expr:  expr.    (11)

	.  reduce 11 (src line 155)


state 11
	control_flow_expr:  assignment_expr.    (12)

	.  reduce 12 (src line 161)


state 12
	control_flow_expr:  return_expr.    (13)

	.  reduce 13 (src line 164)


state 13
	expr:  composable_expr.    (37)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 37
	AND  shift 38
	LT  shift 39
	GT  shift 40
	EQ  shift 41
	NE  shift 42
	LE  shift 43
	GE  shift 44
	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 37 (src line 367)


state 14
	assignment_expr:  LET.IDENT ASSIGN expr 
	assignment_expr:  LET.IDENT type_spec ASSIGN expr 

	IDENT  shift 55
	.  error


state 15
	scope_def:  IDENT.AT 
	assignment_expr:  IDENT.ASSIGN expr 
	unit_expr:  IDENT.    (47)

	ASSIGN  shift 57
	AT  shift 56
	.  reduce 47 (src line 407)


state 16
	return_expr:  RETURN.expr 
	return_expr:  RETURN.AT IDENT expr 
	scope_def: .    (14)

	AT  shift 59
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 58
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 17
	unit_expr:  unit_expr.DOT IDENT 
	unit_expr:  unit_expr.L_PAREN argument_list R_PAREN 
	composable_expr:  unit_expr.    (59)

	L_PAREN  shift 62
	DOT  shift 61
	.  reduce 59 (src line 487)


state 18
	composable_expr:  SUB.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 63
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 19
	composable_expr:  NOT.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 64
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 20
	unit_expr:  literal.    (48)

	.  reduce 48 (src line 414)


state 21
	unit_expr:  conversion_type.L_PAREN composable_expr R_PAREN 

	L_PAREN  shift 65
	.  error


state 22
	unit_expr:  expr_block.    (50)

	.  reduce 50 (src line 429)


state 23
	unit_expr:  conditional_expr.    (51)

	.  reduce 51 (src line 432)


state 24
	unit_expr:  for_expr.    (52)

	.  reduce 52 (src line 435)


state 25
	literal:  BYTE_LITERAL.    (38)

	.  reduce 38 (src line 373)


state 26
	literal:  STRING_LITERAL.    (39)

	.  reduce 39 (src line 377)


state 27
	literal:  INT_LITERAL.    (40)

	.  reduce 40 (src line 380)


state 28
	literal:  FLOAT_LITERAL.    (41)

	.  reduce 41 (src line 383)


state 29
	literal:  BOOL_LITERAL.    (42)

	.  reduce 42 (src line 386)


state 30
	conversion_type:  BYTE_TYPE.    (43)

	.  reduce 43 (src line 391)


state 31
	conversion_type:  INT_TYPE.    (44)

	.  reduce 44 (src line 395)


state 32
	conversion_type:  UINT_TYPE.    (45)

	.  reduce 45 (src line 398)


state 33
	conversion_type:  FLOAT_TYPE.    (46)

	.  reduce 46 (src line 401)


state 34
	expr_block:  scope_def.base_expr_block 
	conditional_expr:  scope_def.base_conditional_expr 
	for_expr:  scope_def.base_for_expr 

	L_BRACE  shift 69
	IF  shift 70
	FOR  shift 71
	.  error

	base_expr_block  goto 66
	base_conditional_expr  goto 67
	base_for_expr  goto 68

state 35
	nonempty_statement_list:  nonempty_statement_list statement.    (5)

	.  reduce 5 (src line 123)


state 36
	statement:  control_flow_expr terminator.    (9)

	.  reduce 9 (src line 143)


state 37
	composable_expr:  composable_expr OR.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 72
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 38
	composable_expr:  composable_expr AND.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 73
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 39
	composable_expr:  composable_expr LT.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 74
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 40
	composable_expr:  composable_expr GT.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 75
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 41
	composable_expr:  composable_expr EQ.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 76
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 42
	composable_expr:  composable_expr NE.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 77
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 43
	composable_expr:  composable_expr LE.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 78
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 44
	composable_expr:  composable_expr GE.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 79
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 45
	composable_expr:  composable_expr BITWISE_OR.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 80
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 46
	composable_expr:  composable_expr BITWISE_AND.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 81
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 47
	composable_expr:  composable_expr XOR.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 82
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 48
	composable_expr:  composable_expr L_SHIFT.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 83
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 49
	composable_expr:  composable_expr R_SHIFT.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 84
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 50
	composable_expr:  composable_expr ADD.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 85
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 51
	composable_expr:  composable_expr SUB.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 86
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 52
	composable_expr:  composable_expr MUL.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 87
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 53
	composable_expr:  composable_expr DIV.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 88
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 54
	composable_expr:  composable_expr MOD.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 89
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 55
	assignment_expr:  LET IDENT.ASSIGN expr 
	assignment_expr:  LET IDENT.type_spec ASSIGN expr 

	ASSIGN  shift 90
	BYTE_TYPE  shift 92
	FLOAT_TYPE  shift 93
	INT_TYPE  shift 94
	UINT_TYPE  shift 95
	.  error

	type_spec  goto 91

state 56
	scope_def:  IDENT AT.    (15)

	.  reduce 15 (src line 173)


state 57
	assignment_expr:  IDENT ASSIGN.expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 96
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 58
	return_expr:  RETURN expr.    (35)

	.  reduce 35 (src line 348)


state 59
	return_expr:  RETURN AT.IDENT expr 

	IDENT  shift 97
	.  error


state 60
	scope_def:  IDENT.AT 
	unit_expr:  IDENT.    (47)

	AT  shift 56
	.  reduce 47 (src line 407)


state 61
	unit_expr:  unit_expr DOT.IDENT 

	IDENT  shift 98
	.  error


state 62
	unit_expr:  unit_expr L_PAREN.argument_list R_PAREN 
	argument_list: .    (55)
	scope_def: .    (14)

	R_PAREN  reduce 55 (src line 457)
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 101
	argument_list  goto 99
	nonempty_argument_list  goto 100
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 63
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  SUB composable_expr.    (78)

	.  reduce 78 (src line 635)


state 64
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  NOT composable_expr.    (79)

	LT  shift 39
	GT  shift 40
	EQ  shift 41
	NE  shift 42
	LE  shift 43
	GE  shift 44
	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 79 (src line 642)


state 65
	unit_expr:  conversion_type L_PAREN.composable_expr R_PAREN 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 102
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 66
	expr_block:  scope_def base_expr_block.    (20)

	.  reduce 20 (src line 197)


state 67
	conditional_expr:  scope_def base_conditional_expr.    (22)

	.  reduce 22 (src line 218)


state 68
	for_expr:  scope_def base_for_expr.    (29)

	.  reduce 29 (src line 287)


state 69
	base_expr_block:  L_BRACE.statement_list R_BRACE 
	statement_list: .    (2)
	scope_def: .    (14)

	R_BRACE  reduce 2 (src line 107)
	SEMICOLON  shift 7
	NEWLINE  shift 8
	LET  shift 14
	RETURN  shift 16
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 15
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	NOOP  shift 9
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 10
	unit_expr  goto 17
	composable_expr  goto 13
	statement_list  goto 103
	nonempty_statement_list  goto 3
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24
	statement  goto 4
	control_flow_expr  goto 6
	assignment_expr  goto 11
	return_expr  goto 12
	terminator  goto 5

state 70
	base_conditional_expr:  IF.composable_expr base_expr_block 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block 
	base_conditional_expr:  IF.composable_expr base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF.composable_expr base_expr_block ELSE base_expr_block 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block ELSE base_expr_block 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 104
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 71
	base_for_expr:  FOR.composable_expr expr_block 
	base_for_expr:  FOR.composable_expr NEWLINE expr_block 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 105
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 72
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr OR composable_expr.    (60)
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	AND  shift 38
	LT  shift 39
	GT  shift 40
	EQ  shift 41
	NE  shift 42
	LE  shift 43
	GE  shift 44
	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 60 (src line 491)


state 73
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr AND composable_expr.    (61)
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	LT  shift 39
	GT  shift 40
	EQ  shift 41
	NE  shift 42
	LE  shift 43
	GE  shift 44
	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 61 (src line 499)


state 74
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr LT composable_expr.    (62)
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 62 (src line 507)


state 75
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr GT composable_expr.    (63)
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 63 (src line 515)


state 76
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr EQ composable_expr.    (64)
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 64 (src line 523)


state 77
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr NE composable_expr.    (65)
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 65 (src line 531)


state 78
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr LE composable_expr.    (66)
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 66 (src line 539)


state 79
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr GE composable_expr.    (67)
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 67 (src line 547)


state 80
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr BITWISE_OR composable_expr.    (68)
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 68 (src line 555)


state 81
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr BITWISE_AND composable_expr.    (69)
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 69 (src line 563)


state 82
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr XOR composable_expr.    (70)
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 70 (src line 571)


state 83
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr L_SHIFT composable_expr.    (71)
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 71 (src line 579)


state 84
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr R_SHIFT composable_expr.    (72)
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 72 (src line 587)


state 85
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr ADD composable_expr.    (73)
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 73 (src line 595)


state 86
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr SUB composable_expr.    (74)
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 74 (src line 603)


state 87
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr MUL composable_expr.    (75)
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	.  reduce 75 (src line 611)


state 88
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr DIV composable_expr.    (76)
	composable_expr:  composable_expr.MOD composable_expr 

	.  reduce 76 (src line 619)


state 89
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  composable_expr MOD composable_expr.    (77)

	.  reduce 77 (src line 627)


state 90
	assignment_expr:  LET IDENT ASSIGN.expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 106
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 91
	assignment_expr:  LET IDENT type_spec.ASSIGN expr 

	ASSIGN  shift 107
	.  error


state 92
	type_spec:  BYTE_TYPE.    (16)

	.  reduce 16 (src line 182)


state 93
	type_spec:  FLOAT_TYPE.    (17)

	.  reduce 17 (src line 186)


state 94
	type_spec:  INT_TYPE.    (18)

	.  reduce 18 (src line 189)


state 95
	type_spec:  UINT_TYPE.    (19)

	.  reduce 19 (src line 192)


state 96
	assignment_expr:  IDENT ASSIGN expr.    (34)

	.  reduce 34 (src line 337)


state 97
	return_expr:  RETURN AT IDENT.expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 108
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 98
	unit_expr:  unit_expr DOT IDENT.    (53)

	.  reduce 53 (src line 438)


state 99
	unit_expr:  unit_expr L_PAREN argument_list.R_PAREN 

	R_PAREN  shift 109
	.  error


state 100
	argument_list:  nonempty_argument_list.    (56)
	nonempty_argument_list:  nonempty_argument_list.COMMA composable_expr 

	COMMA  shift 110
	.  reduce 56 (src line 461)


state 101
	nonempty_argument_list:  composable_expr.    (57)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 37
	AND  shift 38
	LT  shift 39
	GT  shift 40
	EQ  shift 41
	NE  shift 42
	LE  shift 43
	GE  shift 44
	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 57 (src line 466)


state 102
	unit_expr:  conversion_type L_PAREN composable_expr.R_PAREN 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	R_PAREN  shift 111
	OR  shift 37
	AND  shift 38
	LT  shift 39
	GT  shift 40
	EQ  shift 41
	NE  shift 42
	LE  shift 43
	GE  shift 44
	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  error


state 103
	base_expr_block:  L_BRACE statement_list.R_BRACE 

	R_BRACE  shift 112
	.  error


state 104
	base_conditional_expr:  IF composable_expr.base_expr_block 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block 
	base_conditional_expr:  IF composable_expr.base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr.base_expr_block ELSE base_expr_block 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block ELSE base_expr_block 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	L_BRACE  shift 69
	NEWLINE  shift 114
	OR  shift 37
	AND  shift 38
	LT  shift 39
	GT  shift 40
	EQ  shift 41
	NE  shift 42
	LE  shift 43
	GE  shift 44
	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  error

	base_expr_block  goto 113

state 105
	base_for_expr:  FOR composable_expr.expr_block 
	base_for_expr:  FOR composable_expr.NEWLINE expr_block 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	scope_def: .    (14)

	NEWLINE  shift 116
	OR  shift 37
	AND  shift 38
	LT  shift 39
	GT  shift 40
	EQ  shift 41
	NE  shift 42
	LE  shift 43
	GE  shift 44
	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	IDENT  shift 118
	.  reduce 14 (src line 169)

	scope_def  goto 117
	expr_block  goto 115

state 106
	assignment_expr:  LET IDENT ASSIGN expr.    (32)

	.  reduce 32 (src line 316)


state 107
	assignment_expr:  LET IDENT type_spec ASSIGN.expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	expr  goto 119
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 108
	return_expr:  RETURN AT IDENT expr.    (36)

	.  reduce 36 (src line 356)


state 109
	unit_expr:  unit_expr L_PAREN argument_list R_PAREN.    (54)

	.  reduce 54 (src line 446)


state 110
	nonempty_argument_list:  nonempty_argument_list COMMA.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 60
	BYTE_LITERAL  shift 25
	STRING_LITERAL  shift 26
	INT_LITERAL  shift 27
	FLOAT_LITERAL  shift 28
	BOOL_LITERAL  shift 29
	BYTE_TYPE  shift 30
	FLOAT_TYPE  shift 33
	INT_TYPE  shift 31
	UINT_TYPE  shift 32
	.  reduce 14 (src line 169)

	literal  goto 20
	conversion_type  goto 21
	unit_expr  goto 17
	composable_expr  goto 120
	scope_def  goto 34
	expr_block  goto 22
	conditional_expr  goto 23
	for_expr  goto 24

state 111
	unit_expr:  conversion_type L_PAREN composable_expr R_PAREN.    (49)

	.  reduce 49 (src line 420)


state 112
	base_expr_block:  L_BRACE statement_list R_BRACE.    (21)

	.  reduce 21 (src line 207)


state 113
	base_conditional_expr:  IF composable_expr base_expr_block.    (23)
	base_conditional_expr:  IF composable_expr base_expr_block.ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr base_expr_block.ELSE base_expr_block 

	ELSE  shift 121
	.  reduce 23 (src line 228)


state 114
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block 
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block ELSE base_expr_block 

	L_BRACE  shift 69
	.  error

	base_expr_block  goto 122

state 115
	base_for_expr:  FOR composable_expr expr_block.    (30)

	.  reduce 30 (src line 297)


state 116
	base_for_expr:  FOR composable_expr NEWLINE.expr_block 
	scope_def: .    (14)

	IDENT  shift 118
	.  reduce 14 (src line 169)

	scope_def  goto 117
	expr_block  goto 123

state 117
	expr_block:  scope_def.base_expr_block 

	L_BRACE  shift 69
	.  error

	base_expr_block  goto 66

state 118
	scope_def:  IDENT.AT 

	AT  shift 56
	.  error


state 119
	assignment_expr:  LET IDENT type_spec ASSIGN expr.    (33)

	.  reduce 33 (src line 326)


state 120
	nonempty_argument_list:  nonempty_argument_list COMMA composable_expr.    (58)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 37
	AND  shift 38
	LT  shift 39
	GT  shift 40
	EQ  shift 41
	NE  shift 42
	LE  shift 43
	GE  shift 44
	BITWISE_OR  shift 45
	BITWISE_AND  shift 46
	XOR  shift 47
	L_SHIFT  shift 48
	R_SHIFT  shift 49
	ADD  shift 50
	SUB  shift 51
	MUL  shift 52
	DIV  shift 53
	MOD  shift 54
	.  reduce 58 (src line 475)


state 121
	base_conditional_expr:  IF composable_expr base_expr_block ELSE.base_conditional_expr 
	base_conditional_expr:  IF composable_expr base_expr_block ELSE.base_expr_block 

	L_BRACE  shift 69
	IF  shift 70
	.  error

	base_expr_block  goto 125
	base_conditional_expr  goto 124

state 122
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.    (24)
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.ELSE base_expr_block 

	ELSE  shift 126
	.  reduce 24 (src line 237)


state 123
	base_for_expr:  FOR composable_expr NEWLINE expr_block.    (31)

	.  reduce 31 (src line 306)


state 124
	base_conditional_expr:  IF composable_expr base_expr_block ELSE base_conditional_expr.    (25)

	.  reduce 25 (src line 245)


state 125
	base_conditional_expr:  IF composable_expr base_expr_block ELSE base_expr_block.    (27)

	.  reduce 27 (src line 265)


state 126
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE.base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE.base_expr_block 

	L_BRACE  shift 69
	IF  shift 70
	.  error

	base_expr_block  goto 128
	base_conditional_expr  goto 127

state 127
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE base_conditional_expr.    (26)

	.  reduce 26 (src line 255)


state 128
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE base_expr_block.    (28)

	.  reduce 28 (src line 275)


56 terminals, 24 nonterminals
80 grammar rules, 129/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
73 working sets used
memory: parser 515/120000
92 extra closures
707 shift entries, 6 exceptions
66 goto entries
244 entries saved by goto default
Optimizer space used: output 291/120000
291 table entries, 2 zero
maximum spread: 56, maximum offset: 126
