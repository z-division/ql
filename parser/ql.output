
state 0
	$accept: .start $end 
	declaration_list: .    (2)

	NEWLINE  shift 5
	TYPE  shift 6
	FUNC  shift 7
	.  reduce 2 (src line 115)

	declaration  goto 4
	declaration_list  goto 2
	nonempty_declaration_list  goto 3
	start  goto 1

state 1
	$accept:  start.$end 

	$end  accept
	.  error


state 2
	start:  declaration_list.    (1)

	.  reduce 1 (src line 105)


state 3
	declaration_list:  nonempty_declaration_list.    (3)
	nonempty_declaration_list:  nonempty_declaration_list.declaration 

	NEWLINE  shift 5
	TYPE  shift 6
	FUNC  shift 7
	.  reduce 3 (src line 119)

	declaration  goto 8

state 4
	nonempty_declaration_list:  declaration.    (4)

	.  reduce 4 (src line 123)


state 5
	declaration:  NEWLINE.    (6)

	.  reduce 6 (src line 136)


state 6
	declaration:  TYPE.IDENT type_spec 
	declaration:  TYPE.IDENT NEWLINE type_spec 

	IDENT  shift 9
	.  error


state 7
	declaration:  FUNC.IDENT L_PAREN parameter_list R_PAREN base_expr_block 
	declaration:  FUNC.IDENT L_PAREN parameter_list R_PAREN type_spec base_expr_block 

	IDENT  shift 10
	.  error


state 8
	nonempty_declaration_list:  nonempty_declaration_list declaration.    (5)

	.  reduce 5 (src line 129)


state 9
	declaration:  TYPE IDENT.type_spec 
	declaration:  TYPE IDENT.NEWLINE type_spec 

	NEWLINE  shift 12
	IDENT  shift 14
	BOOL_TYPE  shift 15
	INT_TYPE  shift 16
	UINT_TYPE  shift 17
	FLOAT_TYPE  shift 18
	BYTE_TYPE  shift 19
	STRING_TYPE  shift 20
	.  error

	scalar_type  goto 13
	type_spec  goto 11

state 10
	declaration:  FUNC IDENT.L_PAREN parameter_list R_PAREN base_expr_block 
	declaration:  FUNC IDENT.L_PAREN parameter_list R_PAREN type_spec base_expr_block 

	L_PAREN  shift 21
	.  error


state 11
	declaration:  TYPE IDENT type_spec.    (7)

	.  reduce 7 (src line 141)


state 12
	declaration:  TYPE IDENT NEWLINE.type_spec 

	IDENT  shift 14
	BOOL_TYPE  shift 15
	INT_TYPE  shift 16
	UINT_TYPE  shift 17
	FLOAT_TYPE  shift 18
	BYTE_TYPE  shift 19
	STRING_TYPE  shift 20
	.  error

	scalar_type  goto 13
	type_spec  goto 22

state 13
	type_spec:  scalar_type.    (35)

	.  reduce 35 (src line 308)


state 14
	type_spec:  IDENT.    (36)

	.  reduce 36 (src line 315)


state 15
	scalar_type:  BOOL_TYPE.    (29)

	.  reduce 29 (src line 287)


state 16
	scalar_type:  INT_TYPE.    (30)

	.  reduce 30 (src line 291)


state 17
	scalar_type:  UINT_TYPE.    (31)

	.  reduce 31 (src line 294)


state 18
	scalar_type:  FLOAT_TYPE.    (32)

	.  reduce 32 (src line 297)


state 19
	scalar_type:  BYTE_TYPE.    (33)

	.  reduce 33 (src line 300)


state 20
	scalar_type:  STRING_TYPE.    (34)

	.  reduce 34 (src line 303)


state 21
	declaration:  FUNC IDENT L_PAREN.parameter_list R_PAREN base_expr_block 
	declaration:  FUNC IDENT L_PAREN.parameter_list R_PAREN type_spec base_expr_block 
	parameter_list: .    (11)

	IDENT  shift 25
	.  reduce 11 (src line 182)

	parameter_list  goto 23
	nonempty_parameter_list  goto 24

state 22
	declaration:  TYPE IDENT NEWLINE type_spec.    (8)

	.  reduce 8 (src line 149)


state 23
	declaration:  FUNC IDENT L_PAREN parameter_list.R_PAREN base_expr_block 
	declaration:  FUNC IDENT L_PAREN parameter_list.R_PAREN type_spec base_expr_block 

	R_PAREN  shift 26
	.  error


state 24
	parameter_list:  nonempty_parameter_list.    (12)
	nonempty_parameter_list:  nonempty_parameter_list.COMMA IDENT type_spec 

	COMMA  shift 27
	.  reduce 12 (src line 186)


state 25
	nonempty_parameter_list:  IDENT.type_spec 

	IDENT  shift 14
	BOOL_TYPE  shift 15
	INT_TYPE  shift 16
	UINT_TYPE  shift 17
	FLOAT_TYPE  shift 18
	BYTE_TYPE  shift 19
	STRING_TYPE  shift 20
	.  error

	scalar_type  goto 13
	type_spec  goto 28

state 26
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN.base_expr_block 
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN.type_spec base_expr_block 

	L_BRACE  shift 31
	IDENT  shift 14
	BOOL_TYPE  shift 15
	INT_TYPE  shift 16
	UINT_TYPE  shift 17
	FLOAT_TYPE  shift 18
	BYTE_TYPE  shift 19
	STRING_TYPE  shift 20
	.  error

	scalar_type  goto 13
	base_expr_block  goto 29
	type_spec  goto 30

state 27
	nonempty_parameter_list:  nonempty_parameter_list COMMA.IDENT type_spec 

	IDENT  shift 32
	.  error


state 28
	nonempty_parameter_list:  IDENT type_spec.    (13)

	.  reduce 13 (src line 191)


state 29
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN base_expr_block.    (9)

	.  reduce 9 (src line 157)


state 30
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN type_spec.base_expr_block 

	L_BRACE  shift 31
	.  error

	base_expr_block  goto 33

state 31
	base_expr_block:  L_BRACE.statement_list R_BRACE 
	statement_list: .    (15)
	scope_def: .    (27)

	R_BRACE  reduce 15 (src line 213)
	SEMICOLON  shift 39
	NEWLINE  shift 40
	LET  shift 46
	RETURN  shift 48
	NOT  shift 51
	SUB  shift 50
	IDENT  shift 47
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	NOOP  shift 41
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	expr  goto 42
	unit_expr  goto 49
	composable_expr  goto 45
	statement_list  goto 34
	nonempty_statement_list  goto 35
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56
	statement  goto 36
	control_flow_expr  goto 38
	assignment_expr  goto 43
	return_expr  goto 44
	terminator  goto 37

state 32
	nonempty_parameter_list:  nonempty_parameter_list COMMA IDENT.type_spec 

	IDENT  shift 14
	BOOL_TYPE  shift 15
	INT_TYPE  shift 16
	UINT_TYPE  shift 17
	FLOAT_TYPE  shift 18
	BYTE_TYPE  shift 19
	STRING_TYPE  shift 20
	.  error

	scalar_type  goto 13
	type_spec  goto 67

state 33
	declaration:  FUNC IDENT L_PAREN parameter_list R_PAREN type_spec base_expr_block.    (10)

	.  reduce 10 (src line 168)


state 34
	base_expr_block:  L_BRACE statement_list.R_BRACE 

	R_BRACE  shift 68
	.  error


state 35
	statement_list:  nonempty_statement_list.    (16)
	nonempty_statement_list:  nonempty_statement_list.statement 
	scope_def: .    (27)

	R_BRACE  reduce 16 (src line 217)
	SEMICOLON  shift 39
	NEWLINE  shift 40
	LET  shift 46
	RETURN  shift 48
	NOT  shift 51
	SUB  shift 50
	IDENT  shift 47
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	NOOP  shift 41
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	expr  goto 42
	unit_expr  goto 49
	composable_expr  goto 45
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56
	statement  goto 69
	control_flow_expr  goto 38
	assignment_expr  goto 43
	return_expr  goto 44
	terminator  goto 37

state 36
	nonempty_statement_list:  statement.    (17)

	.  reduce 17 (src line 222)


state 37
	statement:  terminator.    (21)

	.  reduce 21 (src line 244)


state 38
	statement:  control_flow_expr.terminator 

	SEMICOLON  shift 39
	NEWLINE  shift 40
	.  error

	terminator  goto 70

state 39
	terminator:  SEMICOLON.    (19)

	.  reduce 19 (src line 235)


state 40
	terminator:  NEWLINE.    (20)

	.  reduce 20 (src line 239)


state 41
	control_flow_expr:  NOOP.    (23)

	.  reduce 23 (src line 253)


state 42
	control_flow_expr:  expr.    (24)

	.  reduce 24 (src line 260)


state 43
	control_flow_expr:  assignment_expr.    (25)

	.  reduce 25 (src line 266)


state 44
	control_flow_expr:  return_expr.    (26)

	.  reduce 26 (src line 269)


state 45
	expr:  composable_expr.    (55)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 71
	AND  shift 72
	LT  shift 73
	GT  shift 74
	EQ  shift 75
	NE  shift 76
	LE  shift 77
	GE  shift 78
	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 55 (src line 504)


state 46
	assignment_expr:  LET.IDENT ASSIGN expr 
	assignment_expr:  LET.IDENT type_spec ASSIGN expr 
	assignment_expr:  LET.IDENT NEWLINE type_spec ASSIGN expr 

	IDENT  shift 89
	.  error


state 47
	scope_def:  IDENT.AT 
	assignment_expr:  IDENT.ASSIGN expr 
	unit_expr:  IDENT.    (65)

	ASSIGN  shift 91
	AT  shift 90
	.  reduce 65 (src line 544)


state 48
	return_expr:  RETURN.expr 
	return_expr:  RETURN.AT IDENT expr 
	scope_def: .    (27)

	AT  shift 93
	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	expr  goto 92
	unit_expr  goto 49
	composable_expr  goto 45
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 49
	unit_expr:  unit_expr.DOT IDENT 
	unit_expr:  unit_expr.L_PAREN argument_list R_PAREN 
	composable_expr:  unit_expr.    (77)

	L_PAREN  shift 96
	DOT  shift 95
	.  reduce 77 (src line 624)


state 50
	composable_expr:  SUB.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 97
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 51
	composable_expr:  NOT.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 98
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 52
	unit_expr:  literal.    (66)

	.  reduce 66 (src line 551)


state 53
	unit_expr:  conversion_type.L_PAREN composable_expr R_PAREN 

	L_PAREN  shift 99
	.  error


state 54
	unit_expr:  expr_block.    (68)

	.  reduce 68 (src line 566)


state 55
	unit_expr:  conditional_expr.    (69)

	.  reduce 69 (src line 569)


state 56
	unit_expr:  for_expr.    (70)

	.  reduce 70 (src line 572)


state 57
	literal:  BYTE_LITERAL.    (56)

	.  reduce 56 (src line 510)


state 58
	literal:  STRING_LITERAL.    (57)

	.  reduce 57 (src line 514)


state 59
	literal:  INT_LITERAL.    (58)

	.  reduce 58 (src line 517)


state 60
	literal:  FLOAT_LITERAL.    (59)

	.  reduce 59 (src line 520)


state 61
	literal:  BOOL_LITERAL.    (60)

	.  reduce 60 (src line 523)


state 62
	conversion_type:  BYTE_TYPE.    (61)

	.  reduce 61 (src line 528)


state 63
	conversion_type:  INT_TYPE.    (62)

	.  reduce 62 (src line 532)


state 64
	conversion_type:  UINT_TYPE.    (63)

	.  reduce 63 (src line 535)


state 65
	conversion_type:  FLOAT_TYPE.    (64)

	.  reduce 64 (src line 538)


state 66
	expr_block:  scope_def.base_expr_block 
	conditional_expr:  scope_def.base_conditional_expr 
	for_expr:  scope_def.base_for_expr 

	L_BRACE  shift 31
	IF  shift 103
	FOR  shift 104
	.  error

	base_expr_block  goto 100
	base_conditional_expr  goto 101
	base_for_expr  goto 102

state 67
	nonempty_parameter_list:  nonempty_parameter_list COMMA IDENT type_spec.    (14)

	.  reduce 14 (src line 201)


state 68
	base_expr_block:  L_BRACE statement_list R_BRACE.    (38)

	.  reduce 38 (src line 333)


state 69
	nonempty_statement_list:  nonempty_statement_list statement.    (18)

	.  reduce 18 (src line 228)


state 70
	statement:  control_flow_expr terminator.    (22)

	.  reduce 22 (src line 248)


state 71
	composable_expr:  composable_expr OR.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 105
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 72
	composable_expr:  composable_expr AND.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 106
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 73
	composable_expr:  composable_expr LT.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 107
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 74
	composable_expr:  composable_expr GT.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 108
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 75
	composable_expr:  composable_expr EQ.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 109
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 76
	composable_expr:  composable_expr NE.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 110
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 77
	composable_expr:  composable_expr LE.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 111
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 78
	composable_expr:  composable_expr GE.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 112
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 79
	composable_expr:  composable_expr BITWISE_OR.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 113
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 80
	composable_expr:  composable_expr BITWISE_AND.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 114
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 81
	composable_expr:  composable_expr XOR.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 115
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 82
	composable_expr:  composable_expr L_SHIFT.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 116
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 83
	composable_expr:  composable_expr R_SHIFT.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 117
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 84
	composable_expr:  composable_expr ADD.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 118
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 85
	composable_expr:  composable_expr SUB.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 119
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 86
	composable_expr:  composable_expr MUL.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 120
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 87
	composable_expr:  composable_expr DIV.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 121
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 88
	composable_expr:  composable_expr MOD.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 122
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 89
	assignment_expr:  LET IDENT.ASSIGN expr 
	assignment_expr:  LET IDENT.type_spec ASSIGN expr 
	assignment_expr:  LET IDENT.NEWLINE type_spec ASSIGN expr 

	ASSIGN  shift 123
	NEWLINE  shift 125
	IDENT  shift 14
	BOOL_TYPE  shift 15
	INT_TYPE  shift 16
	UINT_TYPE  shift 17
	FLOAT_TYPE  shift 18
	BYTE_TYPE  shift 19
	STRING_TYPE  shift 20
	.  error

	scalar_type  goto 13
	type_spec  goto 124

state 90
	scope_def:  IDENT AT.    (28)

	.  reduce 28 (src line 278)


state 91
	assignment_expr:  IDENT ASSIGN.expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	expr  goto 126
	unit_expr  goto 49
	composable_expr  goto 45
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 92
	return_expr:  RETURN expr.    (53)

	.  reduce 53 (src line 485)


state 93
	return_expr:  RETURN AT.IDENT expr 

	IDENT  shift 127
	.  error


state 94
	scope_def:  IDENT.AT 
	unit_expr:  IDENT.    (65)

	AT  shift 90
	.  reduce 65 (src line 544)


state 95
	unit_expr:  unit_expr DOT.IDENT 

	IDENT  shift 128
	.  error


state 96
	unit_expr:  unit_expr L_PAREN.argument_list R_PAREN 
	argument_list: .    (73)
	scope_def: .    (27)

	R_PAREN  reduce 73 (src line 594)
	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 131
	argument_list  goto 129
	nonempty_argument_list  goto 130
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 97
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  SUB composable_expr.    (96)

	.  reduce 96 (src line 772)


state 98
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  NOT composable_expr.    (97)

	LT  shift 73
	GT  shift 74
	EQ  shift 75
	NE  shift 76
	LE  shift 77
	GE  shift 78
	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 97 (src line 779)


state 99
	unit_expr:  conversion_type L_PAREN.composable_expr R_PAREN 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 132
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 100
	expr_block:  scope_def base_expr_block.    (37)

	.  reduce 37 (src line 323)


state 101
	conditional_expr:  scope_def base_conditional_expr.    (39)

	.  reduce 39 (src line 344)


state 102
	for_expr:  scope_def base_for_expr.    (46)

	.  reduce 46 (src line 413)


state 103
	base_conditional_expr:  IF.composable_expr base_expr_block 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block 
	base_conditional_expr:  IF.composable_expr base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF.composable_expr base_expr_block ELSE base_expr_block 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block ELSE base_expr_block 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 133
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 104
	base_for_expr:  FOR.composable_expr expr_block 
	base_for_expr:  FOR.composable_expr NEWLINE expr_block 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 134
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 105
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr OR composable_expr.    (78)
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	AND  shift 72
	LT  shift 73
	GT  shift 74
	EQ  shift 75
	NE  shift 76
	LE  shift 77
	GE  shift 78
	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 78 (src line 628)


state 106
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr AND composable_expr.    (79)
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	LT  shift 73
	GT  shift 74
	EQ  shift 75
	NE  shift 76
	LE  shift 77
	GE  shift 78
	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 79 (src line 636)


state 107
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr LT composable_expr.    (80)
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 80 (src line 644)


state 108
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr GT composable_expr.    (81)
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 81 (src line 652)


state 109
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr EQ composable_expr.    (82)
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 82 (src line 660)


state 110
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr NE composable_expr.    (83)
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 83 (src line 668)


state 111
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr LE composable_expr.    (84)
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 84 (src line 676)


state 112
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr GE composable_expr.    (85)
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 85 (src line 684)


state 113
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr BITWISE_OR composable_expr.    (86)
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 86 (src line 692)


state 114
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr BITWISE_AND composable_expr.    (87)
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 87 (src line 700)


state 115
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr XOR composable_expr.    (88)
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 88 (src line 708)


state 116
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr L_SHIFT composable_expr.    (89)
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 89 (src line 716)


state 117
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr R_SHIFT composable_expr.    (90)
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 90 (src line 724)


state 118
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr ADD composable_expr.    (91)
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 91 (src line 732)


state 119
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr SUB composable_expr.    (92)
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 92 (src line 740)


state 120
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr MUL composable_expr.    (93)
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	.  reduce 93 (src line 748)


state 121
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr DIV composable_expr.    (94)
	composable_expr:  composable_expr.MOD composable_expr 

	.  reduce 94 (src line 756)


state 122
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  composable_expr MOD composable_expr.    (95)

	.  reduce 95 (src line 764)


state 123
	assignment_expr:  LET IDENT ASSIGN.expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	expr  goto 135
	unit_expr  goto 49
	composable_expr  goto 45
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 124
	assignment_expr:  LET IDENT type_spec.ASSIGN expr 

	ASSIGN  shift 136
	.  error


state 125
	assignment_expr:  LET IDENT NEWLINE.type_spec ASSIGN expr 

	IDENT  shift 14
	BOOL_TYPE  shift 15
	INT_TYPE  shift 16
	UINT_TYPE  shift 17
	FLOAT_TYPE  shift 18
	BYTE_TYPE  shift 19
	STRING_TYPE  shift 20
	.  error

	scalar_type  goto 13
	type_spec  goto 137

state 126
	assignment_expr:  IDENT ASSIGN expr.    (52)

	.  reduce 52 (src line 474)


state 127
	return_expr:  RETURN AT IDENT.expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	expr  goto 138
	unit_expr  goto 49
	composable_expr  goto 45
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 128
	unit_expr:  unit_expr DOT IDENT.    (71)

	.  reduce 71 (src line 575)


state 129
	unit_expr:  unit_expr L_PAREN argument_list.R_PAREN 

	R_PAREN  shift 139
	.  error


state 130
	argument_list:  nonempty_argument_list.    (74)
	nonempty_argument_list:  nonempty_argument_list.COMMA composable_expr 

	COMMA  shift 140
	.  reduce 74 (src line 598)


state 131
	nonempty_argument_list:  composable_expr.    (75)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 71
	AND  shift 72
	LT  shift 73
	GT  shift 74
	EQ  shift 75
	NE  shift 76
	LE  shift 77
	GE  shift 78
	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 75 (src line 603)


state 132
	unit_expr:  conversion_type L_PAREN composable_expr.R_PAREN 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	R_PAREN  shift 141
	OR  shift 71
	AND  shift 72
	LT  shift 73
	GT  shift 74
	EQ  shift 75
	NE  shift 76
	LE  shift 77
	GE  shift 78
	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  error


state 133
	base_conditional_expr:  IF composable_expr.base_expr_block 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block 
	base_conditional_expr:  IF composable_expr.base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr.base_expr_block ELSE base_expr_block 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block ELSE base_expr_block 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	L_BRACE  shift 31
	NEWLINE  shift 143
	OR  shift 71
	AND  shift 72
	LT  shift 73
	GT  shift 74
	EQ  shift 75
	NE  shift 76
	LE  shift 77
	GE  shift 78
	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  error

	base_expr_block  goto 142

state 134
	base_for_expr:  FOR composable_expr.expr_block 
	base_for_expr:  FOR composable_expr.NEWLINE expr_block 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	scope_def: .    (27)

	NEWLINE  shift 145
	OR  shift 71
	AND  shift 72
	LT  shift 73
	GT  shift 74
	EQ  shift 75
	NE  shift 76
	LE  shift 77
	GE  shift 78
	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	IDENT  shift 147
	.  reduce 27 (src line 274)

	scope_def  goto 146
	expr_block  goto 144

state 135
	assignment_expr:  LET IDENT ASSIGN expr.    (49)

	.  reduce 49 (src line 442)


state 136
	assignment_expr:  LET IDENT type_spec ASSIGN.expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	expr  goto 148
	unit_expr  goto 49
	composable_expr  goto 45
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 137
	assignment_expr:  LET IDENT NEWLINE type_spec.ASSIGN expr 

	ASSIGN  shift 149
	.  error


state 138
	return_expr:  RETURN AT IDENT expr.    (54)

	.  reduce 54 (src line 493)


state 139
	unit_expr:  unit_expr L_PAREN argument_list R_PAREN.    (72)

	.  reduce 72 (src line 583)


state 140
	nonempty_argument_list:  nonempty_argument_list COMMA.composable_expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	unit_expr  goto 49
	composable_expr  goto 150
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 141
	unit_expr:  conversion_type L_PAREN composable_expr R_PAREN.    (67)

	.  reduce 67 (src line 557)


state 142
	base_conditional_expr:  IF composable_expr base_expr_block.    (40)
	base_conditional_expr:  IF composable_expr base_expr_block.ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr base_expr_block.ELSE base_expr_block 

	ELSE  shift 151
	.  reduce 40 (src line 354)


state 143
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block 
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block ELSE base_expr_block 

	L_BRACE  shift 31
	.  error

	base_expr_block  goto 152

state 144
	base_for_expr:  FOR composable_expr expr_block.    (47)

	.  reduce 47 (src line 423)


state 145
	base_for_expr:  FOR composable_expr NEWLINE.expr_block 
	scope_def: .    (27)

	IDENT  shift 147
	.  reduce 27 (src line 274)

	scope_def  goto 146
	expr_block  goto 153

state 146
	expr_block:  scope_def.base_expr_block 

	L_BRACE  shift 31
	.  error

	base_expr_block  goto 100

state 147
	scope_def:  IDENT.AT 

	AT  shift 90
	.  error


state 148
	assignment_expr:  LET IDENT type_spec ASSIGN expr.    (50)

	.  reduce 50 (src line 452)


state 149
	assignment_expr:  LET IDENT NEWLINE type_spec ASSIGN.expr 
	scope_def: .    (27)

	NOT  shift 51
	SUB  shift 50
	IDENT  shift 94
	BYTE_LITERAL  shift 57
	STRING_LITERAL  shift 58
	INT_LITERAL  shift 59
	FLOAT_LITERAL  shift 60
	BOOL_LITERAL  shift 61
	INT_TYPE  shift 63
	UINT_TYPE  shift 64
	FLOAT_TYPE  shift 65
	BYTE_TYPE  shift 62
	.  reduce 27 (src line 274)

	literal  goto 52
	conversion_type  goto 53
	expr  goto 154
	unit_expr  goto 49
	composable_expr  goto 45
	scope_def  goto 66
	expr_block  goto 54
	conditional_expr  goto 55
	for_expr  goto 56

state 150
	nonempty_argument_list:  nonempty_argument_list COMMA composable_expr.    (76)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 71
	AND  shift 72
	LT  shift 73
	GT  shift 74
	EQ  shift 75
	NE  shift 76
	LE  shift 77
	GE  shift 78
	BITWISE_OR  shift 79
	BITWISE_AND  shift 80
	XOR  shift 81
	L_SHIFT  shift 82
	R_SHIFT  shift 83
	ADD  shift 84
	SUB  shift 85
	MUL  shift 86
	DIV  shift 87
	MOD  shift 88
	.  reduce 76 (src line 612)


state 151
	base_conditional_expr:  IF composable_expr base_expr_block ELSE.base_conditional_expr 
	base_conditional_expr:  IF composable_expr base_expr_block ELSE.base_expr_block 

	L_BRACE  shift 31
	IF  shift 103
	.  error

	base_expr_block  goto 156
	base_conditional_expr  goto 155

state 152
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.    (41)
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.ELSE base_expr_block 

	ELSE  shift 157
	.  reduce 41 (src line 363)


state 153
	base_for_expr:  FOR composable_expr NEWLINE expr_block.    (48)

	.  reduce 48 (src line 432)


state 154
	assignment_expr:  LET IDENT NEWLINE type_spec ASSIGN expr.    (51)

	.  reduce 51 (src line 463)


state 155
	base_conditional_expr:  IF composable_expr base_expr_block ELSE base_conditional_expr.    (42)

	.  reduce 42 (src line 371)


state 156
	base_conditional_expr:  IF composable_expr base_expr_block ELSE base_expr_block.    (44)

	.  reduce 44 (src line 391)


state 157
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE.base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE.base_expr_block 

	L_BRACE  shift 31
	IF  shift 103
	.  error

	base_expr_block  goto 159
	base_conditional_expr  goto 158

state 158
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE base_conditional_expr.    (43)

	.  reduce 43 (src line 381)


state 159
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE base_expr_block.    (45)

	.  reduce 45 (src line 401)


60 terminals, 30 nonterminals
98 grammar rules, 160/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
79 working sets used
memory: parser 461/120000
95 extra closures
765 shift entries, 4 exceptions
81 goto entries
243 entries saved by goto default
Optimizer space used: output 361/120000
361 table entries, 19 zero
maximum spread: 60, maximum offset: 157
