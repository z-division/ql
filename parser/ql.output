
state 0
	$accept: .start $end 
	statement_list: .    (2)
	scope_def: .    (14)

	$end  reduce 2 (src line 99)
	SEMICOLON  shift 7
	NEWLINE  shift 8
	LET  shift 14
	RETURN  shift 16
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 15
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	NOOP  shift 9
	.  reduce 14 (src line 161)

	expr  goto 10
	unit_expr  goto 17
	composable_expr  goto 13
	statement_list  goto 2
	nonempty_statement_list  goto 3
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27
	statement  goto 4
	control_flow_expr  goto 6
	assignment_expr  goto 11
	return_expr  goto 12
	start  goto 1
	terminator  goto 5

state 1
	$accept:  start.$end 

	$end  accept
	.  error


state 2
	start:  statement_list.    (1)

	.  reduce 1 (src line 89)


state 3
	statement_list:  nonempty_statement_list.    (3)
	nonempty_statement_list:  nonempty_statement_list.statement 
	scope_def: .    (14)

	$end  reduce 3 (src line 103)
	R_BRACE  reduce 3 (src line 103)
	SEMICOLON  shift 7
	NEWLINE  shift 8
	LET  shift 14
	RETURN  shift 16
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 15
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	NOOP  shift 9
	.  reduce 14 (src line 161)

	expr  goto 10
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27
	statement  goto 29
	control_flow_expr  goto 6
	assignment_expr  goto 11
	return_expr  goto 12
	terminator  goto 5

state 4
	nonempty_statement_list:  statement.    (4)

	.  reduce 4 (src line 109)


state 5
	statement:  terminator.    (8)

	.  reduce 8 (src line 131)


state 6
	statement:  control_flow_expr.terminator 

	SEMICOLON  shift 7
	NEWLINE  shift 8
	.  error

	terminator  goto 30

state 7
	terminator:  SEMICOLON.    (6)

	.  reduce 6 (src line 122)


state 8
	terminator:  NEWLINE.    (7)

	.  reduce 7 (src line 126)


state 9
	control_flow_expr:  NOOP.    (10)

	.  reduce 10 (src line 140)


state 10
	control_flow_expr:  expr.    (11)

	.  reduce 11 (src line 147)


state 11
	control_flow_expr:  assignment_expr.    (12)

	.  reduce 12 (src line 153)


state 12
	control_flow_expr:  return_expr.    (13)

	.  reduce 13 (src line 156)


state 13
	expr:  composable_expr.    (32)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 31
	AND  shift 32
	LT  shift 33
	GT  shift 34
	EQ  shift 35
	NE  shift 36
	LE  shift 37
	GE  shift 38
	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 32 (src line 333)


state 14
	assignment_expr:  LET.IDENT ASSIGN expr 

	IDENT  shift 49
	.  error


state 15
	scope_def:  IDENT.AT 
	assignment_expr:  IDENT.ASSIGN expr 
	unit_expr:  IDENT.    (33)

	ASSIGN  shift 51
	AT  shift 50
	.  reduce 33 (src line 340)


state 16
	return_expr:  RETURN.expr 
	return_expr:  RETURN.AT IDENT expr 
	scope_def: .    (14)

	AT  shift 53
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	expr  goto 52
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 17
	unit_expr:  unit_expr.DOT IDENT 
	unit_expr:  unit_expr.L_PAREN argument_list R_PAREN 
	composable_expr:  unit_expr.    (48)

	L_PAREN  shift 56
	DOT  shift 55
	.  reduce 48 (src line 435)


state 18
	composable_expr:  SUB.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 57
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 19
	composable_expr:  NOT.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 58
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 20
	unit_expr:  CHAR_LITERAL.    (34)

	.  reduce 34 (src line 347)


state 21
	unit_expr:  STRING_LITERAL.    (35)

	.  reduce 35 (src line 353)


state 22
	unit_expr:  INT_LITERAL.    (36)

	.  reduce 36 (src line 359)


state 23
	unit_expr:  FLOAT_LITERAL.    (37)

	.  reduce 37 (src line 365)


state 24
	unit_expr:  BOOL_LITERAL.    (38)

	.  reduce 38 (src line 371)


state 25
	unit_expr:  expr_block.    (39)

	.  reduce 39 (src line 377)


state 26
	unit_expr:  conditional_expr.    (40)

	.  reduce 40 (src line 380)


state 27
	unit_expr:  for_expr.    (41)

	.  reduce 41 (src line 383)


state 28
	expr_block:  scope_def.base_expr_block 
	conditional_expr:  scope_def.base_conditional_expr 
	for_expr:  scope_def.base_for_expr 

	L_BRACE  shift 62
	IF  shift 63
	FOR  shift 64
	.  error

	base_expr_block  goto 59
	base_conditional_expr  goto 60
	base_for_expr  goto 61

state 29
	nonempty_statement_list:  nonempty_statement_list statement.    (5)

	.  reduce 5 (src line 115)


state 30
	statement:  control_flow_expr terminator.    (9)

	.  reduce 9 (src line 135)


state 31
	composable_expr:  composable_expr OR.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 65
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 32
	composable_expr:  composable_expr AND.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 66
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 33
	composable_expr:  composable_expr LT.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 67
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 34
	composable_expr:  composable_expr GT.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 68
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 35
	composable_expr:  composable_expr EQ.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 69
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 36
	composable_expr:  composable_expr NE.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 70
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 37
	composable_expr:  composable_expr LE.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 71
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 38
	composable_expr:  composable_expr GE.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 72
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 39
	composable_expr:  composable_expr BITWISE_OR.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 73
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 40
	composable_expr:  composable_expr BITWISE_AND.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 74
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 41
	composable_expr:  composable_expr XOR.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 75
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 42
	composable_expr:  composable_expr L_SHIFT.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 76
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 43
	composable_expr:  composable_expr R_SHIFT.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 77
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 44
	composable_expr:  composable_expr ADD.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 78
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 45
	composable_expr:  composable_expr SUB.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 79
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 46
	composable_expr:  composable_expr MUL.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 80
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 47
	composable_expr:  composable_expr DIV.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 81
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 48
	composable_expr:  composable_expr MOD.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 82
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 49
	assignment_expr:  LET IDENT.ASSIGN expr 

	ASSIGN  shift 83
	.  error


state 50
	scope_def:  IDENT AT.    (15)

	.  reduce 15 (src line 165)


state 51
	assignment_expr:  IDENT ASSIGN.expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	expr  goto 84
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 52
	return_expr:  RETURN expr.    (30)

	.  reduce 30 (src line 314)


state 53
	return_expr:  RETURN AT.IDENT expr 

	IDENT  shift 85
	.  error


state 54
	scope_def:  IDENT.AT 
	unit_expr:  IDENT.    (33)

	AT  shift 50
	.  reduce 33 (src line 340)


state 55
	unit_expr:  unit_expr DOT.IDENT 

	IDENT  shift 86
	.  error


state 56
	unit_expr:  unit_expr L_PAREN.argument_list R_PAREN 
	argument_list: .    (44)
	scope_def: .    (14)

	R_PAREN  reduce 44 (src line 405)
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 89
	argument_list  goto 87
	nonempty_argument_list  goto 88
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 57
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  SUB composable_expr.    (67)

	.  reduce 67 (src line 583)


state 58
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  NOT composable_expr.    (68)

	LT  shift 33
	GT  shift 34
	EQ  shift 35
	NE  shift 36
	LE  shift 37
	GE  shift 38
	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 68 (src line 590)


state 59
	expr_block:  scope_def base_expr_block.    (16)

	.  reduce 16 (src line 174)


state 60
	conditional_expr:  scope_def base_conditional_expr.    (18)

	.  reduce 18 (src line 195)


state 61
	for_expr:  scope_def base_for_expr.    (25)

	.  reduce 25 (src line 264)


state 62
	base_expr_block:  L_BRACE.statement_list R_BRACE 
	statement_list: .    (2)
	scope_def: .    (14)

	R_BRACE  reduce 2 (src line 99)
	SEMICOLON  shift 7
	NEWLINE  shift 8
	LET  shift 14
	RETURN  shift 16
	NOT  shift 19
	SUB  shift 18
	IDENT  shift 15
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	NOOP  shift 9
	.  reduce 14 (src line 161)

	expr  goto 10
	unit_expr  goto 17
	composable_expr  goto 13
	statement_list  goto 90
	nonempty_statement_list  goto 3
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27
	statement  goto 4
	control_flow_expr  goto 6
	assignment_expr  goto 11
	return_expr  goto 12
	terminator  goto 5

state 63
	base_conditional_expr:  IF.composable_expr base_expr_block 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block 
	base_conditional_expr:  IF.composable_expr base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF.composable_expr base_expr_block ELSE base_expr_block 
	base_conditional_expr:  IF.composable_expr NEWLINE base_expr_block ELSE base_expr_block 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 91
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 64
	base_for_expr:  FOR.composable_expr expr_block 
	base_for_expr:  FOR.composable_expr NEWLINE expr_block 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 92
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 65
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr OR composable_expr.    (49)
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	AND  shift 32
	LT  shift 33
	GT  shift 34
	EQ  shift 35
	NE  shift 36
	LE  shift 37
	GE  shift 38
	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 49 (src line 439)


state 66
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr AND composable_expr.    (50)
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	LT  shift 33
	GT  shift 34
	EQ  shift 35
	NE  shift 36
	LE  shift 37
	GE  shift 38
	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 50 (src line 447)


state 67
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr LT composable_expr.    (51)
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 51 (src line 455)


state 68
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr GT composable_expr.    (52)
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 52 (src line 463)


state 69
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr EQ composable_expr.    (53)
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 53 (src line 471)


state 70
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr NE composable_expr.    (54)
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 54 (src line 479)


state 71
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr LE composable_expr.    (55)
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 55 (src line 487)


state 72
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr GE composable_expr.    (56)
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 56 (src line 495)


state 73
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr BITWISE_OR composable_expr.    (57)
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 57 (src line 503)


state 74
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr BITWISE_AND composable_expr.    (58)
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 58 (src line 511)


state 75
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr XOR composable_expr.    (59)
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 59 (src line 519)


state 76
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr L_SHIFT composable_expr.    (60)
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 60 (src line 527)


state 77
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr R_SHIFT composable_expr.    (61)
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 61 (src line 535)


state 78
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr ADD composable_expr.    (62)
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 62 (src line 543)


state 79
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr SUB composable_expr.    (63)
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 63 (src line 551)


state 80
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr MUL composable_expr.    (64)
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	.  reduce 64 (src line 559)


state 81
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr DIV composable_expr.    (65)
	composable_expr:  composable_expr.MOD composable_expr 

	.  reduce 65 (src line 567)


state 82
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	composable_expr:  composable_expr MOD composable_expr.    (66)

	.  reduce 66 (src line 575)


state 83
	assignment_expr:  LET IDENT ASSIGN.expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	expr  goto 93
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 84
	assignment_expr:  IDENT ASSIGN expr.    (29)

	.  reduce 29 (src line 303)


state 85
	return_expr:  RETURN AT IDENT.expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	expr  goto 94
	unit_expr  goto 17
	composable_expr  goto 13
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 86
	unit_expr:  unit_expr DOT IDENT.    (42)

	.  reduce 42 (src line 386)


state 87
	unit_expr:  unit_expr L_PAREN argument_list.R_PAREN 

	R_PAREN  shift 95
	.  error


state 88
	argument_list:  nonempty_argument_list.    (45)
	nonempty_argument_list:  nonempty_argument_list.COMMA composable_expr 

	COMMA  shift 96
	.  reduce 45 (src line 409)


state 89
	nonempty_argument_list:  composable_expr.    (46)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 31
	AND  shift 32
	LT  shift 33
	GT  shift 34
	EQ  shift 35
	NE  shift 36
	LE  shift 37
	GE  shift 38
	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 46 (src line 414)


state 90
	base_expr_block:  L_BRACE statement_list.R_BRACE 

	R_BRACE  shift 97
	.  error


state 91
	base_conditional_expr:  IF composable_expr.base_expr_block 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block 
	base_conditional_expr:  IF composable_expr.base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr.base_expr_block ELSE base_expr_block 
	base_conditional_expr:  IF composable_expr.NEWLINE base_expr_block ELSE base_expr_block 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	L_BRACE  shift 62
	NEWLINE  shift 99
	OR  shift 31
	AND  shift 32
	LT  shift 33
	GT  shift 34
	EQ  shift 35
	NE  shift 36
	LE  shift 37
	GE  shift 38
	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  error

	base_expr_block  goto 98

state 92
	base_for_expr:  FOR composable_expr.expr_block 
	base_for_expr:  FOR composable_expr.NEWLINE expr_block 
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 
	scope_def: .    (14)

	NEWLINE  shift 101
	OR  shift 31
	AND  shift 32
	LT  shift 33
	GT  shift 34
	EQ  shift 35
	NE  shift 36
	LE  shift 37
	GE  shift 38
	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	IDENT  shift 103
	.  reduce 14 (src line 161)

	scope_def  goto 102
	expr_block  goto 100

state 93
	assignment_expr:  LET IDENT ASSIGN expr.    (28)

	.  reduce 28 (src line 293)


state 94
	return_expr:  RETURN AT IDENT expr.    (31)

	.  reduce 31 (src line 322)


state 95
	unit_expr:  unit_expr L_PAREN argument_list R_PAREN.    (43)

	.  reduce 43 (src line 394)


state 96
	nonempty_argument_list:  nonempty_argument_list COMMA.composable_expr 
	scope_def: .    (14)

	NOT  shift 19
	SUB  shift 18
	IDENT  shift 54
	CHAR_LITERAL  shift 20
	STRING_LITERAL  shift 21
	INT_LITERAL  shift 22
	FLOAT_LITERAL  shift 23
	BOOL_LITERAL  shift 24
	.  reduce 14 (src line 161)

	unit_expr  goto 17
	composable_expr  goto 104
	scope_def  goto 28
	expr_block  goto 25
	conditional_expr  goto 26
	for_expr  goto 27

state 97
	base_expr_block:  L_BRACE statement_list R_BRACE.    (17)

	.  reduce 17 (src line 184)


state 98
	base_conditional_expr:  IF composable_expr base_expr_block.    (19)
	base_conditional_expr:  IF composable_expr base_expr_block.ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr base_expr_block.ELSE base_expr_block 

	ELSE  shift 105
	.  reduce 19 (src line 205)


state 99
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block 
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE.base_expr_block ELSE base_expr_block 

	L_BRACE  shift 62
	.  error

	base_expr_block  goto 106

state 100
	base_for_expr:  FOR composable_expr expr_block.    (26)

	.  reduce 26 (src line 274)


state 101
	base_for_expr:  FOR composable_expr NEWLINE.expr_block 
	scope_def: .    (14)

	IDENT  shift 103
	.  reduce 14 (src line 161)

	scope_def  goto 102
	expr_block  goto 107

state 102
	expr_block:  scope_def.base_expr_block 

	L_BRACE  shift 62
	.  error

	base_expr_block  goto 59

state 103
	scope_def:  IDENT.AT 

	AT  shift 50
	.  error


state 104
	nonempty_argument_list:  nonempty_argument_list COMMA composable_expr.    (47)
	composable_expr:  composable_expr.OR composable_expr 
	composable_expr:  composable_expr.AND composable_expr 
	composable_expr:  composable_expr.LT composable_expr 
	composable_expr:  composable_expr.GT composable_expr 
	composable_expr:  composable_expr.EQ composable_expr 
	composable_expr:  composable_expr.NE composable_expr 
	composable_expr:  composable_expr.LE composable_expr 
	composable_expr:  composable_expr.GE composable_expr 
	composable_expr:  composable_expr.BITWISE_OR composable_expr 
	composable_expr:  composable_expr.BITWISE_AND composable_expr 
	composable_expr:  composable_expr.XOR composable_expr 
	composable_expr:  composable_expr.L_SHIFT composable_expr 
	composable_expr:  composable_expr.R_SHIFT composable_expr 
	composable_expr:  composable_expr.ADD composable_expr 
	composable_expr:  composable_expr.SUB composable_expr 
	composable_expr:  composable_expr.MUL composable_expr 
	composable_expr:  composable_expr.DIV composable_expr 
	composable_expr:  composable_expr.MOD composable_expr 

	OR  shift 31
	AND  shift 32
	LT  shift 33
	GT  shift 34
	EQ  shift 35
	NE  shift 36
	LE  shift 37
	GE  shift 38
	BITWISE_OR  shift 39
	BITWISE_AND  shift 40
	XOR  shift 41
	L_SHIFT  shift 42
	R_SHIFT  shift 43
	ADD  shift 44
	SUB  shift 45
	MUL  shift 46
	DIV  shift 47
	MOD  shift 48
	.  reduce 47 (src line 423)


state 105
	base_conditional_expr:  IF composable_expr base_expr_block ELSE.base_conditional_expr 
	base_conditional_expr:  IF composable_expr base_expr_block ELSE.base_expr_block 

	L_BRACE  shift 62
	IF  shift 63
	.  error

	base_expr_block  goto 109
	base_conditional_expr  goto 108

state 106
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.    (20)
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.ELSE base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block.ELSE base_expr_block 

	ELSE  shift 110
	.  reduce 20 (src line 214)


state 107
	base_for_expr:  FOR composable_expr NEWLINE expr_block.    (27)

	.  reduce 27 (src line 283)


state 108
	base_conditional_expr:  IF composable_expr base_expr_block ELSE base_conditional_expr.    (21)

	.  reduce 21 (src line 222)


state 109
	base_conditional_expr:  IF composable_expr base_expr_block ELSE base_expr_block.    (23)

	.  reduce 23 (src line 242)


state 110
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE.base_conditional_expr 
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE.base_expr_block 

	L_BRACE  shift 62
	IF  shift 63
	.  error

	base_expr_block  goto 112
	base_conditional_expr  goto 111

state 111
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE base_conditional_expr.    (22)

	.  reduce 22 (src line 232)


state 112
	base_conditional_expr:  IF composable_expr NEWLINE base_expr_block ELSE base_expr_block.    (24)

	.  reduce 24 (src line 252)


52 terminals, 21 nonterminals
69 grammar rules, 113/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
70 working sets used
memory: parser 399/120000
87 extra closures
534 shift entries, 6 exceptions
61 goto entries
169 entries saved by goto default
Optimizer space used: output 260/120000
260 table entries, 13 zero
maximum spread: 52, maximum offset: 110
